openapi: 3.0.3
info:
  title: 'Chaingateway API Documentation'
  description: "\nChaingateway is a REST API for interactiong with Multiple Blockchain Networks like Ethereum, Binance Smart Chain, Tron, and more.\n\n## Authentication\nYou will need to add your Bearer Token to your `Authorization` header to authenticate your requests.\n\nFind more information about it <a href='/developers/'>here</a>.\n\n## Networks\nThe API supports multiple networks, including Mainnets and testnets.\n\nTo switch to testnet api, simply add `X-Network` header to your request with value `testnet`.\n\nIf you want to use mainnet api, you can either remove the `X-Network` header or set it to `mainnet`.\n\nYou can find more information about the networks\n<a href='/developers/getting-started/supported-networks'>here</a>.\n\n## Additional resources:\n<a href='/developers'>Developer Portal</a>\n\n<a href='/developers/getting-started/quickstart'>Quick Start</a>\n\n<a href='/developers/getting-started/faq'>FAQ</a>\n\n<a href='/developers/tutorials'>Tutorials</a>\n\n"
  version: 2.1.0
servers:
  -
    url: 'https://beta.chaingateway.io'
    description: 'Production Server'
paths:
  /api/v2/tron/blocks/number:
    get:
      summary: 'Get the latest block number'
      operationId: getTheLatestBlockNumber
      description: 'This method returns the latest block number of the Tron blockchain'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'latest block number'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Latest block number fetched'
                  data:
                    blocknumber: 44776190
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Latest block number fetched'
                  data:
                    type: object
                    properties:
                      blocknumber:
                        type: integer
                        example: 44776190
      tags:
        - 'Tron Blockchain Queries'
  '/api/v2/tron/blocks/{block_number}':
    get:
      summary: 'Get block by number or hash'
      operationId: getBlockByNumberOrHash
      description: 'This method returns the block by its number'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Block fetched'
                  data:
                    blockID: 0000000002ab3a92bdd1ad8459d8d01e364b2d3e2d0edde631eecae17cd54f4e
                    block_header:
                      raw_data:
                        number: 44776082
                        txTrieRoot: 0c41bd85e72082e7e91854527fd5edfcd5ec2f452ec391ff8773638646c3a003
                        witness_address: 414bbb38ac8f2c666f56c16e0b21ccda04d18b6b6b
                        parentHash: 0000000002ab3a917a556bfc48c0110cbe32928150a57c3d3f0f5a76ac41d6ec
                        version: 28
                        timestamp: 1709216589000
                      witness_signature: c28e39d518a41cbb44791d9ed3707f18d2e940d46a3ad894fbf6a78e87e429c56cee1cd8f4f18f45cc9c4435c5a0149b4fcf11298837e97013072bae39a0023100
                    transactions:
                      -
                        ret:
                          -
                            contractRet: SUCCESS
                        signature:
                          - b59efa8d33316f25bbbab3633dfefef10af3c5f1ba0d798eb8a49c1da60b95414c0b69e1dd59564364bbedcd0475d61e5af6e8ee1dafbb49a41692ad42f30aaf01
                        txID: a1760f27ef993fb6ab73777fd88121bab7eff73e8b2099bdeeda6f027352cab3
                        raw_data:
                          contract:
                            -
                              parameter:
                                value:
                                  data: 0e99f793d577c125a59d385e58c5b2810ff69db870f2c28e9932e933b133339adc28bb310000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e093460000000000000000000000000000000000000000000000000000000000000000
                                  owner_address: 414223e592ed4e72289e8e1fc16774caef785c092a
                                  contract_address: 4187f9f4433e00eb0a1644e80d7159b1e54da21d31
                                type_url: type.googleapis.com/protocol.TriggerSmartContract
                              type: TriggerSmartContract
                          ref_block_bytes: 3a7f
                          ref_block_hash: 2a6ebc1bb5aee980
                          expiration: 1709216646000
                          fee_limit: 450000000
                          timestamp: 1709216587955
                        raw_data_hex: 0a023a7f22082a6ebc1bb5aee98040f08681aadf315ab003081f12ab030a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412f5020a15414223e592ed4e72289e8e1fc16774caef785c092a12154187f9f4433e00eb0a1644e80d7159b1e54da21d3122c4020e99f793d577c125a59d385e58c5b2810ff69db870f2c28e9932e933b133339adc28bb310000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e09346000000000000000000000000000000000000000000000000000000000000000070b3c1fda9df31900180e9c9d601
                      -
                        ret:
                          -
                            contractRet: SUCCESS
                        signature:
                          - 439f51b1001c740f13c3344211dc0d1e2d5e00ffef57e246568b1e10ddcf503762675c2dd322a6f3ab2f15a798cf82689acf6d712e27b0ef8a46b98862a6b44a00
                        txID: 2c1f0fa4d57e949363da2913a4ab8aa7db9e61ba4e38cf9f53d48c1e5e566c23
                        raw_data:
                          contract:
                            -
                              parameter:
                                value:
                                  data: 0e99f793176d0e33517ba3c8634c5a7c22dc16773c1518dd49a84f90493a1c44edf8021e0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e093450000000000000000000000000000000000000000000000000000000000000000
                                  owner_address: 41d132364a6570470e4226c47079a0fa558eb4c78c
                                  contract_address: 4126a733f2df06bb49dd6b7723cd033245108a4b47
                                type_url: type.googleapis.com/protocol.TriggerSmartContract
                              type: TriggerSmartContract
                          ref_block_bytes: 3a7f
                          ref_block_hash: 2a6ebc1bb5aee980
                          expiration: 1709216646000
                          fee_limit: 450000000
                          timestamp: 1709216588127
                        raw_data_hex: 0a023a7f22082a6ebc1bb5aee98040f08681aadf315ab003081f12ab030a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412f5020a1541d132364a6570470e4226c47079a0fa558eb4c78c12154126a733f2df06bb49dd6b7723cd033245108a4b4722c4020e99f793176d0e33517ba3c8634c5a7c22dc16773c1518dd49a84f90493a1c44edf8021e0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e09345000000000000000000000000000000000000000000000000000000000000000070dfc2fda9df31900180e9c9d601
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Block fetched'
                  data:
                    type: object
                    properties:
                      blockID:
                        type: string
                        example: 0000000002ab3a92bdd1ad8459d8d01e364b2d3e2d0edde631eecae17cd54f4e
                      block_header:
                        type: object
                        properties:
                          raw_data:
                            type: object
                            properties:
                              number:
                                type: integer
                                example: 44776082
                              txTrieRoot:
                                type: string
                                example: 0c41bd85e72082e7e91854527fd5edfcd5ec2f452ec391ff8773638646c3a003
                              witness_address:
                                type: string
                                example: 414bbb38ac8f2c666f56c16e0b21ccda04d18b6b6b
                              parentHash:
                                type: string
                                example: 0000000002ab3a917a556bfc48c0110cbe32928150a57c3d3f0f5a76ac41d6ec
                              version:
                                type: integer
                                example: 28
                              timestamp:
                                type: integer
                                example: 1709216589000
                          witness_signature:
                            type: string
                            example: c28e39d518a41cbb44791d9ed3707f18d2e940d46a3ad894fbf6a78e87e429c56cee1cd8f4f18f45cc9c4435c5a0149b4fcf11298837e97013072bae39a0023100
                      transactions:
                        type: array
                        example:
                          -
                            ret:
                              -
                                contractRet: SUCCESS
                            signature:
                              - b59efa8d33316f25bbbab3633dfefef10af3c5f1ba0d798eb8a49c1da60b95414c0b69e1dd59564364bbedcd0475d61e5af6e8ee1dafbb49a41692ad42f30aaf01
                            txID: a1760f27ef993fb6ab73777fd88121bab7eff73e8b2099bdeeda6f027352cab3
                            raw_data:
                              contract:
                                -
                                  parameter:
                                    value:
                                      data: 0e99f793d577c125a59d385e58c5b2810ff69db870f2c28e9932e933b133339adc28bb310000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e093460000000000000000000000000000000000000000000000000000000000000000
                                      owner_address: 414223e592ed4e72289e8e1fc16774caef785c092a
                                      contract_address: 4187f9f4433e00eb0a1644e80d7159b1e54da21d31
                                    type_url: type.googleapis.com/protocol.TriggerSmartContract
                                  type: TriggerSmartContract
                              ref_block_bytes: 3a7f
                              ref_block_hash: 2a6ebc1bb5aee980
                              expiration: 1709216646000
                              fee_limit: 450000000
                              timestamp: 1709216587955
                            raw_data_hex: 0a023a7f22082a6ebc1bb5aee98040f08681aadf315ab003081f12ab030a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412f5020a15414223e592ed4e72289e8e1fc16774caef785c092a12154187f9f4433e00eb0a1644e80d7159b1e54da21d3122c4020e99f793d577c125a59d385e58c5b2810ff69db870f2c28e9932e933b133339adc28bb310000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e09346000000000000000000000000000000000000000000000000000000000000000070b3c1fda9df31900180e9c9d601
                          -
                            ret:
                              -
                                contractRet: SUCCESS
                            signature:
                              - 439f51b1001c740f13c3344211dc0d1e2d5e00ffef57e246568b1e10ddcf503762675c2dd322a6f3ab2f15a798cf82689acf6d712e27b0ef8a46b98862a6b44a00
                            txID: 2c1f0fa4d57e949363da2913a4ab8aa7db9e61ba4e38cf9f53d48c1e5e566c23
                            raw_data:
                              contract:
                                -
                                  parameter:
                                    value:
                                      data: 0e99f793176d0e33517ba3c8634c5a7c22dc16773c1518dd49a84f90493a1c44edf8021e0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e093450000000000000000000000000000000000000000000000000000000000000000
                                      owner_address: 41d132364a6570470e4226c47079a0fa558eb4c78c
                                      contract_address: 4126a733f2df06bb49dd6b7723cd033245108a4b47
                                    type_url: type.googleapis.com/protocol.TriggerSmartContract
                                  type: TriggerSmartContract
                              ref_block_bytes: 3a7f
                              ref_block_hash: 2a6ebc1bb5aee980
                              expiration: 1709216646000
                              fee_limit: 450000000
                              timestamp: 1709216588127
                            raw_data_hex: 0a023a7f22082a6ebc1bb5aee98040f08681aadf315ab003081f12ab030a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412f5020a1541d132364a6570470e4226c47079a0fa558eb4c78c12154126a733f2df06bb49dd6b7723cd033245108a4b4722c4020e99f793176d0e33517ba3c8634c5a7c22dc16773c1518dd49a84f90493a1c44edf8021e0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e09345000000000000000000000000000000000000000000000000000000000000000070dfc2fda9df31900180e9c9d601
                        items:
                          type: object
                          properties:
                            ret:
                              type: array
                              example:
                                -
                                  contractRet: SUCCESS
                              items:
                                type: object
                                properties:
                                  contractRet:
                                    type: string
                                    example: SUCCESS
                            signature:
                              type: array
                              example:
                                - b59efa8d33316f25bbbab3633dfefef10af3c5f1ba0d798eb8a49c1da60b95414c0b69e1dd59564364bbedcd0475d61e5af6e8ee1dafbb49a41692ad42f30aaf01
                              items:
                                type: string
                            txID:
                              type: string
                              example: a1760f27ef993fb6ab73777fd88121bab7eff73e8b2099bdeeda6f027352cab3
                            raw_data:
                              type: object
                              properties:
                                contract:
                                  type: array
                                  example:
                                    -
                                      parameter: { value: { data: 0e99f793d577c125a59d385e58c5b2810ff69db870f2c28e9932e933b133339adc28bb310000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e093460000000000000000000000000000000000000000000000000000000000000000, owner_address: 414223e592ed4e72289e8e1fc16774caef785c092a, contract_address: 4187f9f4433e00eb0a1644e80d7159b1e54da21d31 }, type_url: type.googleapis.com/protocol.TriggerSmartContract }
                                      type: TriggerSmartContract
                                  items:
                                    type: object
                                    properties:
                                      parameter: { type: object, properties: { value: { type: object, properties: { data: { type: string, example: 0e99f793d577c125a59d385e58c5b2810ff69db870f2c28e9932e933b133339adc28bb310000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e093460000000000000000000000000000000000000000000000000000000000000000 }, owner_address: { type: string, example: 414223e592ed4e72289e8e1fc16774caef785c092a }, contract_address: { type: string, example: 4187f9f4433e00eb0a1644e80d7159b1e54da21d31 } } }, type_url: { type: string, example: type.googleapis.com/protocol.TriggerSmartContract } } }
                                      type: { type: string, example: TriggerSmartContract }
                                ref_block_bytes:
                                  type: string
                                  example: 3a7f
                                ref_block_hash:
                                  type: string
                                  example: 2a6ebc1bb5aee980
                                expiration:
                                  type: integer
                                  example: 1709216646000
                                fee_limit:
                                  type: integer
                                  example: 450000000
                                timestamp:
                                  type: integer
                                  example: 1709216587955
                            raw_data_hex:
                              type: string
                              example: 0a023a7f22082a6ebc1bb5aee98040f08681aadf315ab003081f12ab030a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412f5020a15414223e592ed4e72289e8e1fc16774caef785c092a12154187f9f4433e00eb0a1644e80d7159b1e54da21d3122c4020e99f793d577c125a59d385e58c5b2810ff69db870f2c28e9932e933b133339adc28bb310000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134fb300000000000000000000000000000000000000000000000000000000000382da000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065e09346000000000000000000000000000000000000000000000000000000000000000070b3c1fda9df31900180e9c9d601
      tags:
        - 'Tron Blockchain Queries'
    parameters:
      -
        in: path
        name: block_number
        description: 'The block number'
        example: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
        required: true
        schema:
          type: string
  /api/v2/tron/transactions:
    get:
      summary: 'List all Transactions'
      operationId: listAllTransactions
      description: "This method lists your transaction history. It lists all transactions including TRC20 and TRC721 transactions. <br>\n Please note that we dont index your addresses. We list only transactions that were made with the Chaingateway API"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Paginated results'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transactions'
                  current_page: 1
                  data:
                    -
                      id: 1
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: default
                      txid: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      contractaddress: null
                      amount: '0.001000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T09:00:18.000000Z'
                      updated_at: '2024-02-13T09:00:18.000000Z'
                    -
                      id: 4
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: default
                      txid: '0x5da4f33531fab8ecfe6f36a1300265f772b5f11c2da736a39b0b4b0c1b97c3e2'
                      from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      contractaddress: null
                      amount: '0.384200000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:01:26.000000Z'
                      updated_at: '2024-02-13T10:01:26.000000Z'
                    -
                      id: 5
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x1b7ecf53527e9a9ec09c448b2f594357e8a09f52c02c96d0de33fe435750d371'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:34:34.000000Z'
                      updated_at: '2024-02-13T10:34:34.000000Z'
                    -
                      id: 6
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x5b293a7289e8405fb8402f0bfa6e7464fdc9bfbc11aaa7874d4a7216b4079729'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:35:57.000000Z'
                      updated_at: '2024-02-13T10:35:57.000000Z'
                    -
                      id: 7
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x8830bd8d0cf0dfeac6d4cc345888ae52f9ca8b3a3cf37859919786bd9cd8ae2f'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '100.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T12:22:03.000000Z'
                      updated_at: '2024-02-13T12:22:03.000000Z'
                    -
                      id: 8
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T12:36:48.000000Z'
                      updated_at: '2024-02-13T12:36:48.000000Z'
                  first_page_url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions'
                  per_page: 50
                  prev_page_url: null
                  to: 6
                  total: 6
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transactions'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: default
                        txid: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                        from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress: null
                        amount: '0.001000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T09:00:18.000000Z'
                        updated_at: '2024-02-13T09:00:18.000000Z'
                      -
                        id: 4
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: default
                        txid: '0x5da4f33531fab8ecfe6f36a1300265f772b5f11c2da736a39b0b4b0c1b97c3e2'
                        from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress: null
                        amount: '0.384200000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:01:26.000000Z'
                        updated_at: '2024-02-13T10:01:26.000000Z'
                      -
                        id: 5
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x1b7ecf53527e9a9ec09c448b2f594357e8a09f52c02c96d0de33fe435750d371'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:34:34.000000Z'
                        updated_at: '2024-02-13T10:34:34.000000Z'
                      -
                        id: 6
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x5b293a7289e8405fb8402f0bfa6e7464fdc9bfbc11aaa7874d4a7216b4079729'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:35:57.000000Z'
                        updated_at: '2024-02-13T10:35:57.000000Z'
                      -
                        id: 7
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x8830bd8d0cf0dfeac6d4cc345888ae52f9ca8b3a3cf37859919786bd9cd8ae2f'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '100.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T12:22:03.000000Z'
                        updated_at: '2024-02-13T12:22:03.000000Z'
                      -
                        id: 8
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T12:36:48.000000Z'
                        updated_at: '2024-02-13T12:36:48.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 1
                        blockchain:
                          type: string
                          example: bsc
                        network:
                          type: string
                          example: testnet
                        type:
                          type: string
                          example: default
                        txid:
                          type: string
                          example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                        from:
                          type: string
                          example: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to:
                          type: string
                          example: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: '0.001000000000'
                        tokenid:
                          type: string
                          example: null
                        responseJson:
                          type: string
                          example: null
                        httpStatus:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2024-02-13T09:00:18.000000Z'
                        updated_at:
                          type: string
                          example: '2024-02-13T09:00:18.000000Z'
                  first_page_url:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions'
                  per_page:
                    type: integer
                    example: 50
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 6
                  total:
                    type: integer
                    example: 6
      tags:
        - 'Tron Transactions'
    post:
      summary: 'Create Transaction'
      operationId: createTransaction
      description: "This method creates a new transaction. <br>\nIf the transaction is successful, it will return the transaction hash. <br>\nIf the transaction fails, it will return an error message. <br>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created transaction'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created transaction'
                  data:
                    txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created transaction'
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                        example: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
        422:
          description: 'Wrong privatekey'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Validate signature error: 0984bea42fc16d38512ef3f3ae0ad36b7123d1804a8b284106005793d441b2dd2d1bfdad10ec2879e06a35bbb9a89f268b81b79bc35f6031784c32fe60eee65e01 is signed by TT61CoyUW1ZwkcpkZAcortLvpYk7TW4fgD but it is not contained of permission.'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validate signature error: 0984bea42fc16d38512ef3f3ae0ad36b7123d1804a8b284106005793d441b2dd2d1bfdad10ec2879e06a35bbb9a89f268b81b79bc35f6031784c32fe60eee65e01 is signed by TT61CoyUW1ZwkcpkZAcortLvpYk7TW4fgD but it is not contained of permission.'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Tron Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  description: 'The amount to send.'
                  example: 1.0
                privatekey:
                  type: string
                  description: 'The private key of the sender.'
                  example: 708c419d1b9ae123047f70787a503b6ba51e048a27966e0220cc5feXXXXXXXXX
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^T[a-zA-Z0-9]{33}$/.'
                  example: TUwmZghA7u2GxGxKaxM1mkCmsTF4wHs4vp
                from:
                  type: string
                  description: 'The address to send the transaction from. Must match the regex /^T[a-zA-Z0-9]{33}$/.'
                  example: TLkkCeNdJKPNUwucdro84WjswkzM62LCTH
              required:
                - amount
                - privatekey
                - to
                - from
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter. The page number'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1'
  '/api/v2/tron/transactions/{txid}':
    get:
      summary: 'Show Transaction'
      operationId: showTransaction
      description: "This method shows a transaction <br>\nIf the transaction is successful, it will return the transaction details. <br>\nIf the transaction fails, it will return an error message. <br>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Encoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction receipt'
                  data:
                    transaction:
                      ret:
                        -
                          contractRet: SUCCESS
                      signature:
                        - b75218466a3c1a141f8a2e776ec02b8aed247175193cdfa15d6bcdecac686e782edf4623c758f3483876316189d1dcc7c2aae154210038a7562b57ee49fbe99400
                      txID: 1b66c3d50dc32690a352f3cec78cd247d02a57a5c521865fb2a137785f129a7d
                      raw_data:
                        contract:
                          -
                            parameter:
                              value:
                                amount: 1000000
                                owner_address: 41764e0536d24197cd869232bf7b09f58820cde9d2
                                to_address: 41d024bd62f3da57306ad1f9b469acdb66dc292912
                              type_url: type.googleapis.com/protocol.TransferContract
                            type: TransferContract
                        ref_block_bytes: '1159'
                        ref_block_hash: 2c0d8fbacaf7ced9
                        expiration: 1708979589000
                        timestamp: 1708979530210
                      raw_data_hex: 0a02115922082c0d8fbacaf7ced940889ffcb8de315a67080112630a2d747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e5472616e73666572436f6e747261637412320a1541764e0536d24197cd869232bf7b09f58820cde9d2121541d024bd62f3da57306ad1f9b469acdb66dc29291218c0843d70e2d3f8b8de31
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction receipt'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          ret:
                            type: array
                            example:
                              -
                                contractRet: SUCCESS
                            items:
                              type: object
                              properties:
                                contractRet:
                                  type: string
                                  example: SUCCESS
                          signature:
                            type: array
                            example:
                              - b75218466a3c1a141f8a2e776ec02b8aed247175193cdfa15d6bcdecac686e782edf4623c758f3483876316189d1dcc7c2aae154210038a7562b57ee49fbe99400
                            items:
                              type: string
                          txID:
                            type: string
                            example: 1b66c3d50dc32690a352f3cec78cd247d02a57a5c521865fb2a137785f129a7d
                          raw_data:
                            type: object
                            properties:
                              contract:
                                type: array
                                example:
                                  -
                                    parameter:
                                      value: { amount: 1000000, owner_address: 41764e0536d24197cd869232bf7b09f58820cde9d2, to_address: 41d024bd62f3da57306ad1f9b469acdb66dc292912 }
                                      type_url: type.googleapis.com/protocol.TransferContract
                                    type: TransferContract
                                items:
                                  type: object
                                  properties:
                                    parameter:
                                      type: object
                                      properties: { value: { type: object, properties: { amount: { type: integer, example: 1000000 }, owner_address: { type: string, example: 41764e0536d24197cd869232bf7b09f58820cde9d2 }, to_address: { type: string, example: 41d024bd62f3da57306ad1f9b469acdb66dc292912 } } }, type_url: { type: string, example: type.googleapis.com/protocol.TransferContract } }
                                    type:
                                      type: string
                                      example: TransferContract
                              ref_block_bytes:
                                type: string
                                example: '1159'
                              ref_block_hash:
                                type: string
                                example: 2c0d8fbacaf7ced9
                              expiration:
                                type: integer
                                example: 1708979589000
                              timestamp:
                                type: integer
                                example: 1708979530210
                          raw_data_hex:
                            type: string
                            example: 0a02115922082c0d8fbacaf7ced940889ffcb8de315a67080112630a2d747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e5472616e73666572436f6e747261637412320a1541764e0536d24197cd869232bf7b09f58820cde9d2121541d024bd62f3da57306ad1f9b469acdb66dc29291218c0843d70e2d3f8b8de31
      tags:
        - 'Tron Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  '/api/v2/tron/transactions/{txid}/decoded':
    get:
      summary: 'Show Transaction'
      operationId: showTransaction
      description: "This method shows a transaction <br>\nIf the transaction is successful, it will return the transaction details. <br>\nIf the transaction fails, it will return an error message. <br>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Encoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction receipt'
                  data:
                    transaction:
                      ret:
                        -
                          contractRet: SUCCESS
                      signature:
                        - b75218466a3c1a141f8a2e776ec02b8aed247175193cdfa15d6bcdecac686e782edf4623c758f3483876316189d1dcc7c2aae154210038a7562b57ee49fbe99400
                      txID: 1b66c3d50dc32690a352f3cec78cd247d02a57a5c521865fb2a137785f129a7d
                      raw_data:
                        contract:
                          -
                            parameter:
                              value:
                                amount: 1000000
                                owner_address: 41764e0536d24197cd869232bf7b09f58820cde9d2
                                to_address: 41d024bd62f3da57306ad1f9b469acdb66dc292912
                              type_url: type.googleapis.com/protocol.TransferContract
                            type: TransferContract
                        ref_block_bytes: '1159'
                        ref_block_hash: 2c0d8fbacaf7ced9
                        expiration: 1708979589000
                        timestamp: 1708979530210
                      raw_data_hex: 0a02115922082c0d8fbacaf7ced940889ffcb8de315a67080112630a2d747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e5472616e73666572436f6e747261637412320a1541764e0536d24197cd869232bf7b09f58820cde9d2121541d024bd62f3da57306ad1f9b469acdb66dc29291218c0843d70e2d3f8b8de31
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction receipt'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          ret:
                            type: array
                            example:
                              -
                                contractRet: SUCCESS
                            items:
                              type: object
                              properties:
                                contractRet:
                                  type: string
                                  example: SUCCESS
                          signature:
                            type: array
                            example:
                              - b75218466a3c1a141f8a2e776ec02b8aed247175193cdfa15d6bcdecac686e782edf4623c758f3483876316189d1dcc7c2aae154210038a7562b57ee49fbe99400
                            items:
                              type: string
                          txID:
                            type: string
                            example: 1b66c3d50dc32690a352f3cec78cd247d02a57a5c521865fb2a137785f129a7d
                          raw_data:
                            type: object
                            properties:
                              contract:
                                type: array
                                example:
                                  -
                                    parameter:
                                      value: { amount: 1000000, owner_address: 41764e0536d24197cd869232bf7b09f58820cde9d2, to_address: 41d024bd62f3da57306ad1f9b469acdb66dc292912 }
                                      type_url: type.googleapis.com/protocol.TransferContract
                                    type: TransferContract
                                items:
                                  type: object
                                  properties:
                                    parameter:
                                      type: object
                                      properties: { value: { type: object, properties: { amount: { type: integer, example: 1000000 }, owner_address: { type: string, example: 41764e0536d24197cd869232bf7b09f58820cde9d2 }, to_address: { type: string, example: 41d024bd62f3da57306ad1f9b469acdb66dc292912 } } }, type_url: { type: string, example: type.googleapis.com/protocol.TransferContract } }
                                    type:
                                      type: string
                                      example: TransferContract
                              ref_block_bytes:
                                type: string
                                example: '1159'
                              ref_block_hash:
                                type: string
                                example: 2c0d8fbacaf7ced9
                              expiration:
                                type: integer
                                example: 1708979589000
                              timestamp:
                                type: integer
                                example: 1708979530210
                          raw_data_hex:
                            type: string
                            example: 0a02115922082c0d8fbacaf7ced940889ffcb8de315a67080112630a2d747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e5472616e73666572436f6e747261637412320a1541764e0536d24197cd869232bf7b09f58820cde9d2121541d024bd62f3da57306ad1f9b469acdb66dc29291218c0843d70e2d3f8b8de31
      tags:
        - 'Tron Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  /api/v2/tron/addresses:
    post:
      summary: 'Create a new Address'
      operationId: createANewAddress
      description: "Creates a new address wich can be used to send and receive crypto currencies, ERC20 and ERC721 tokens.\nplease provide a stron password within the request body. You will need the password everytime you interact with your address.\n\n<aside class=\"notice\">We do not store Passowrds! If you lose it, we cannot restore your wallet! </aside>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Address created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Address created'
                  data:
                    -
                      privateKey: 59f1c6200e01a2ca9471411f10198bfa63678d0e87cc2ca30f9c4a68dee78edc
                      publicKey: 040fe6e677442c36f7fdd5535ba3ff1cef0110d78363420f7e24b65298990e3467aed68b9a67e1396d84753db25b32a2fa3e1fc0a673f01638e9bcfab2d8f4ceb5
                      hexAddress: 41a56a6505ffbee78eb916dd44f4846874deddaebd
                      address: TR3qx91smURF3R455V1ubqtoUsZbgqikfg
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address created'
                  data:
                    type: array
                    example:
                      -
                        privateKey: 59f1c6200e01a2ca9471411f10198bfa63678d0e87cc2ca30f9c4a68dee78edc
                        publicKey: 040fe6e677442c36f7fdd5535ba3ff1cef0110d78363420f7e24b65298990e3467aed68b9a67e1396d84753db25b32a2fa3e1fc0a673f01638e9bcfab2d8f4ceb5
                        hexAddress: 41a56a6505ffbee78eb916dd44f4846874deddaebd
                        address: TR3qx91smURF3R455V1ubqtoUsZbgqikfg
                    items:
                      type: object
                      properties:
                        privateKey:
                          type: string
                          example: 59f1c6200e01a2ca9471411f10198bfa63678d0e87cc2ca30f9c4a68dee78edc
                        publicKey:
                          type: string
                          example: 040fe6e677442c36f7fdd5535ba3ff1cef0110d78363420f7e24b65298990e3467aed68b9a67e1396d84753db25b32a2fa3e1fc0a673f01638e9bcfab2d8f4ceb5
                        hexAddress:
                          type: string
                          example: 41a56a6505ffbee78eb916dd44f4846874deddaebd
                        address:
                          type: string
                          example: TR3qx91smURF3R455V1ubqtoUsZbgqikfg
      tags:
        - 'Tron Addresses'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                activated:
                  type: boolean
                  description: 'If the address should be activated automatically, default is false. This functionality requires funds in your paymaster wallet and will cost 0.1 EUR.'
                  example: true
  '/api/v2/tron/balances/{address}':
    get:
      summary: 'Get TRX balance'
      operationId: getTRXBalance
      description: 'This method returns the balance of the specified address'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Tron Blockchain Queries'
    parameters:
      -
        in: path
        name: address
        description: 'The address to fetch the balance for'
        example: TVF2Mp9QY7FEGTnr3DBpFLobA6jguHyMvi
        required: true
        schema:
          type: string
  '/api/v2/tron/balances/{address}/trc20/{contract_address}':
    get:
      summary: 'Get TRC20 balance'
      operationId: getTRC20Balance
      description: 'This method returns the balance of the specified address for the specified token'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Tron Blockchain Queries'
    parameters:
      -
        in: path
        name: address
        description: 'The address to fetch the balance for'
        example: TVF2Mp9QY7FEGTnr3DBpFLobA6jguHyMvi
        required: true
        schema:
          type: string
      -
        in: path
        name: contract_address
        description: 'The contract address'
        example: TXLAQ63Xg1NAzckPwKHvzw7CSEmLMEqcdj
        required: true
        schema:
          type: string
  '/api/v2/tron/transactions/{txid}/receipt/{decoded}':
    get:
      summary: "Show Transaction Receipt\nThis method shows a transaction receipt <br>"
      operationId: showTransactionReceiptThisMethodShowsATransactionReceiptbr
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Encoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction receipt'
                  data:
                    transaction:
                      blockHash: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                      blockNumber: '0x23f4782'
                      contractAddress: null
                      cumulativeGasUsed: '0x993f6'
                      effectiveGasPrice: '0xb2d05e00'
                      from: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                      gasUsed: '0x5208'
                      logs: []
                      logsBloom: '0x
                      status: '0x1'
                      to: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      transactionHash: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      transactionIndex: '0x8'
                      type: '0x0'
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction receipt'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          blockHash:
                            type: string
                            example: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                          blockNumber:
                            type: string
                            example: '0x23f4782'
                          contractAddress:
                            type: string
                            example: null
                          cumulativeGasUsed:
                            type: string
                            example: '0x993f6'
                          effectiveGasPrice:
                            type: string
                            example: '0xb2d05e00'
                          from:
                            type: string
                            example: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                          gasUsed:
                            type: string
                            example: '0x5208'
                          logs:
                            type: array
                            example: []
                          logsBloom:
                            type: string
                            example: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
                          status:
                            type: string
                            example: '0x1'
                          to:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          transactionHash:
                            type: string
                            example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                          transactionIndex:
                            type: string
                            example: '0x8'
                          type:
                            type: string
                            example: '0x0'
        422:
          description: 'Transaction receipt not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'transaction not found'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'transaction not found'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Tron Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  /api/v2/tron/transactions/trc20:
    post:
      summary: 'Create ERC20 transaction'
      operationId: createERC20Transaction
      description: "This method creates a new ERC20 transaction. <br>\nIf the transaction is successful, it will return the transaction hash. <br>\nIf the transaction fails, it will return an error message. <br>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created transaction'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created transaction'
                  data:
                    txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created transaction'
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                        example: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
        422:
          description: 'Wrong privatekey'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Validate signature error: 0984bea42fc16d38512ef3f3ae0ad36b7123d1804a8b284106005793d441b2dd2d1bfdad10ec2879e06a35bbb9a89f268b81b79bc35f6031784c32fe60eee65e01 is signed by TT61CoyUW1ZwkcpkZAcortLvpYk7TW4fgD but it is not contained of permission.'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validate signature error: 0984bea42fc16d38512ef3f3ae0ad36b7123d1804a8b284106005793d441b2dd2d1bfdad10ec2879e06a35bbb9a89f268b81b79bc35f6031784c32fe60eee65e01 is signed by TT61CoyUW1ZwkcpkZAcortLvpYk7TW4fgD but it is not contained of permission.'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Tron Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from.'
                  example: TLkkCeNdJKPNUwucdro84WjswkzM62LCTH
                to:
                  type: string
                  description: 'The address to send the transaction to.'
                  example: TUwmZghA7u2GxGxKaxM1mkCmsTF4wHs4vp
                contractaddress:
                  type: string
                  description: 'The contract address of the token.'
                  example: 0x708c419d1b9ae123047f70787a503b6ba51e048a27966e0220cc5feXXXXXXXXX
                amount:
                  type: number
                  description: 'The amount to send.'
                  example: 1.0
                privatekey:
                  type: string
                  description: 'The private key of the sender.'
                  example: 708c419d1b9ae123047f70787a503b6ba51e048a27966e0220cc5feXXXXXXXXX
              required:
                - from
                - to
                - contractaddress
                - amount
                - privatekey
  /api/v2/tron/transactions/trc721:
    post:
      summary: 'Create ERC721 transactions'
      operationId: createERC721Transactions
      description: "This method creates a new ERC721 transaction. <br>\nIf the transaction is successful, it will return the transaction hash. <br>\nIf the transaction fails, it will return an error message. <br>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created transaction'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created transaction'
                  data:
                    txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created transaction'
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                        example: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
        422:
          description: 'Wrong privatekey'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Validate signature error: 0984bea42fc16d38512ef3f3ae0ad36b7123d1804a8b284106005793d441b2dd2d1bfdad10ec2879e06a35bbb9a89f268b81b79bc35f6031784c32fe60eee65e01 is signed by TT61CoyUW1ZwkcpkZAcortLvpYk7TW4fgD but it is not contained of permission.'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validate signature error: 0984bea42fc16d38512ef3f3ae0ad36b7123d1804a8b284106005793d441b2dd2d1bfdad10ec2879e06a35bbb9a89f268b81b79bc35f6031784c32fe60eee65e01 is signed by TT61CoyUW1ZwkcpkZAcortLvpYk7TW4fgD but it is not contained of permission.'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Tron Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from.'
                  example: TLkkCeNdJKPNUwucdro84WjswkzM62LCTH
                to:
                  type: string
                  description: 'The address to send the transaction to.'
                  example: TUwmZghA7u2GxGxKaxM1mkCmsTF4wHs4vp
                contractaddress:
                  type: string
                  description: 'The contract address of the token.'
                  example: 0x708c419d1b9ae123047f70787a503b6ba51e048a27966e0220cc5feXXXXXXXXX
                tokenid:
                  type: number
                  description: 'The token id of the token.'
                  example: 1.0
                amount:
                  type: number
                  description: 'The amount to send.'
                  example: 1.0
                privatekey:
                  type: string
                  description: 'The private key of the sender.'
                  example: 708c419d1b9ae123047f70787a503b6ba51e048a27966e0220cc5feXXXXXXXXX
              required:
                - from
                - to
                - contractaddress
                - tokenid
                - amount
                - privatekey
  '/api/v2/tron/trc20/{contract_address}':
    get:
      summary: 'Get TRC20 contract information'
      operationId: getTRC20ContractInformation
      description: 'This method returns the contract information of the specified contract'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'TRC20 contract fetched'
                  data:
                    bytecode: 60806040526005...
                    name: USDT
                    origin_address: TGQVLckg1gDZS5wUwPTrPgRG4U8MKC4jcP
                    abi:
                      entrys:
                        -
                          inputs:
                            -
                              name: name_
                              type: string
                            -
                              name: symbol_
                              type: string
                          stateMutability: Nonpayable
                          type: Constructor
                        -
                          inputs:
                            -
                              indexed: true
                              name: owner
                              type: address
                            -
                              indexed: true
                              name: spender
                              type: address
                            -
                              name: value
                              type: uint256
                          name: Approval
                          type: Event
                        -
                          inputs:
                            -
                              name: userAddress
                              type: address
                            -
                              name: relayerAddress
                              type: address
                            -
                              name: functionSignature
                              type: bytes
                          name: MetaTransactionExecuted
                          type: Event
                        -
                          inputs:
                            -
                              indexed: true
                              name: previousOwner
                              type: address
                            -
                              indexed: true
                              name: newOwner
                              type: address
                          name: OwnershipTransferred
                          type: Event
                        -
                          inputs:
                            -
                              indexed: true
                              name: from
                              type: address
                            -
                              indexed: true
                              name: to
                              type: address
                            -
                              name: value
                              type: uint256
                          name: Transfer
                          type: Event
                        -
                          outputs:
                            -
                              type: string
                          name: ERC712_VERSION
                          stateMutability: View
                          type: Function
                        -
                          outputs:
                            -
                              type: uint256
                          inputs:
                            -
                              name: owner
                              type: address
                            -
                              name: spender
                              type: address
                          name: allowance
                          stateMutability: View
                          type: Function
                        -
                          outputs:
                            -
                              type: bool
                          inputs:
                            -
                              name: spender
                              type: address
                            -
                              name: amount
                              type: uint256
                          name: approve
                          stateMutability: Nonpayable
                          type: Function
                        -
                          outputs:
                            -
                              type: uint256
                          inputs:
                            -
                              name: account
                              type: address
                          name: balanceOf
                          stateMutability: View
                          type: Function
                        -
                          outputs:
                            -
                              type: uint8
                          name: decimals
                          stateMutability: View
                          type: Function
                        -
                          outputs:
                            -
                              type: bool
                          inputs:
                            -
                              name: spender
                              type: address
                            -
                              name: subtractedValue
                              type: uint256
                          name: decreaseAllowance
                          stateMutability: Nonpayable
                          type: Function
                        -
                          outputs:
                            -
                              type: bytes
                          inputs:
                            -
                              name: userAddress
                              type: address
                            -
                              name: functionSignature
                              type: bytes
                            -
                              name: sigR
                              type: bytes32
                            -
                              name: sigS
                              type: bytes32
                            -
                              name: sigV
                              type: uint8
                          name: executeMetaTransaction
                          stateMutability: Payable
                          type: Function
                        -
                          outputs:
                            -
                              type: uint256
                          name: getChainId
                          stateMutability: Pure
                          type: Function
                        -
                          outputs:
                            -
                              type: bytes32
                          name: getDomainSeperator
                          stateMutability: View
                          type: Function
                        -
                          outputs:
                            -
                              name: nonce
                              type: uint256
                          inputs:
                            -
                              name: user
                              type: address
                          name: getNonce
                          stateMutability: View
                          type: Function
                        -
                          outputs:
                            -
                              type: bool
                          inputs:
                            -
                              name: spender
                              type: address
                            -
                              name: addedValue
                              type: uint256
                          name: increaseAllowance
                          stateMutability: Nonpayable
                          type: Function
                        -
                          inputs:
                            -
                              name: amount
                              type: uint256
                          name: mint
                          stateMutability: Nonpayable
                          type: Function
                        -
                          outputs:
                            -
                              type: string
                          name: name
                          stateMutability: View
                          type: Function
                        -
                          outputs:
                            -
                              type: address
                          name: owner
                          stateMutability: View
                          type: Function
                        -
                          name: renounceOwnership
                          stateMutability: Nonpayable
                          type: Function
                        -
                          outputs:
                            -
                              type: string
                          name: symbol
                          stateMutability: View
                          type: Function
                        -
                          outputs:
                            -
                              type: uint256
                          name: totalSupply
                          stateMutability: View
                          type: Function
                        -
                          outputs:
                            -
                              type: bool
                          inputs:
                            -
                              name: recipient
                              type: address
                            -
                              name: amount
                              type: uint256
                          name: transfer
                          stateMutability: Nonpayable
                          type: Function
                        -
                          outputs:
                            -
                              type: bool
                          inputs:
                            -
                              name: sender
                              type: address
                            -
                              name: recipient
                              type: address
                            -
                              name: amount
                              type: uint256
                          name: transferFrom
                          stateMutability: Nonpayable
                          type: Function
                        -
                          inputs:
                            -
                              name: newOwner
                              type: address
                          name: transferOwnership
                          stateMutability: Nonpayable
                          type: Function
                    origin_energy_limit: 10000000
                    contract_address: TXLAQ63Xg1NAzckPwKHvzw7CSEmLMEqcdj
                    code_hash: 9a2cb3016d11c0fbbe0b84f326d8d9562acf36c5f2c40045b92cbdcb24521fd4
                  '0': 200
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'TRC20 contract fetched'
                  data:
                    type: object
                    properties:
                      bytecode:
                        type: string
                        example: 60806040526005...
                      name:
                        type: string
                        example: USDT
                      origin_address:
                        type: string
                        example: TGQVLckg1gDZS5wUwPTrPgRG4U8MKC4jcP
                      abi:
                        type: object
                        properties:
                          entrys:
                            type: array
                            example:
                              -
                                inputs:
                                  -
                                    name: name_
                                    type: string
                                  -
                                    name: symbol_
                                    type: string
                                stateMutability: Nonpayable
                                type: Constructor
                              -
                                inputs:
                                  -
                                    indexed: true
                                    name: owner
                                    type: address
                                  -
                                    indexed: true
                                    name: spender
                                    type: address
                                  -
                                    name: value
                                    type: uint256
                                name: Approval
                                type: Event
                              -
                                inputs:
                                  -
                                    name: userAddress
                                    type: address
                                  -
                                    name: relayerAddress
                                    type: address
                                  -
                                    name: functionSignature
                                    type: bytes
                                name: MetaTransactionExecuted
                                type: Event
                              -
                                inputs:
                                  -
                                    indexed: true
                                    name: previousOwner
                                    type: address
                                  -
                                    indexed: true
                                    name: newOwner
                                    type: address
                                name: OwnershipTransferred
                                type: Event
                              -
                                inputs:
                                  -
                                    indexed: true
                                    name: from
                                    type: address
                                  -
                                    indexed: true
                                    name: to
                                    type: address
                                  -
                                    name: value
                                    type: uint256
                                name: Transfer
                                type: Event
                              -
                                outputs:
                                  -
                                    type: string
                                name: ERC712_VERSION
                                stateMutability: View
                                type: Function
                              -
                                outputs:
                                  -
                                    type: uint256
                                inputs:
                                  -
                                    name: owner
                                    type: address
                                  -
                                    name: spender
                                    type: address
                                name: allowance
                                stateMutability: View
                                type: Function
                              -
                                outputs:
                                  -
                                    type: bool
                                inputs:
                                  -
                                    name: spender
                                    type: address
                                  -
                                    name: amount
                                    type: uint256
                                name: approve
                                stateMutability: Nonpayable
                                type: Function
                              -
                                outputs:
                                  -
                                    type: uint256
                                inputs:
                                  -
                                    name: account
                                    type: address
                                name: balanceOf
                                stateMutability: View
                                type: Function
                              -
                                outputs:
                                  -
                                    type: uint8
                                name: decimals
                                stateMutability: View
                                type: Function
                              -
                                outputs:
                                  -
                                    type: bool
                                inputs:
                                  -
                                    name: spender
                                    type: address
                                  -
                                    name: subtractedValue
                                    type: uint256
                                name: decreaseAllowance
                                stateMutability: Nonpayable
                                type: Function
                              -
                                outputs:
                                  -
                                    type: bytes
                                inputs:
                                  -
                                    name: userAddress
                                    type: address
                                  -
                                    name: functionSignature
                                    type: bytes
                                  -
                                    name: sigR
                                    type: bytes32
                                  -
                                    name: sigS
                                    type: bytes32
                                  -
                                    name: sigV
                                    type: uint8
                                name: executeMetaTransaction
                                stateMutability: Payable
                                type: Function
                              -
                                outputs:
                                  -
                                    type: uint256
                                name: getChainId
                                stateMutability: Pure
                                type: Function
                              -
                                outputs:
                                  -
                                    type: bytes32
                                name: getDomainSeperator
                                stateMutability: View
                                type: Function
                              -
                                outputs:
                                  -
                                    name: nonce
                                    type: uint256
                                inputs:
                                  -
                                    name: user
                                    type: address
                                name: getNonce
                                stateMutability: View
                                type: Function
                              -
                                outputs:
                                  -
                                    type: bool
                                inputs:
                                  -
                                    name: spender
                                    type: address
                                  -
                                    name: addedValue
                                    type: uint256
                                name: increaseAllowance
                                stateMutability: Nonpayable
                                type: Function
                              -
                                inputs:
                                  -
                                    name: amount
                                    type: uint256
                                name: mint
                                stateMutability: Nonpayable
                                type: Function
                              -
                                outputs:
                                  -
                                    type: string
                                name: name
                                stateMutability: View
                                type: Function
                              -
                                outputs:
                                  -
                                    type: address
                                name: owner
                                stateMutability: View
                                type: Function
                              -
                                name: renounceOwnership
                                stateMutability: Nonpayable
                                type: Function
                              -
                                outputs:
                                  -
                                    type: string
                                name: symbol
                                stateMutability: View
                                type: Function
                              -
                                outputs:
                                  -
                                    type: uint256
                                name: totalSupply
                                stateMutability: View
                                type: Function
                              -
                                outputs:
                                  -
                                    type: bool
                                inputs:
                                  -
                                    name: recipient
                                    type: address
                                  -
                                    name: amount
                                    type: uint256
                                name: transfer
                                stateMutability: Nonpayable
                                type: Function
                              -
                                outputs:
                                  -
                                    type: bool
                                inputs:
                                  -
                                    name: sender
                                    type: address
                                  -
                                    name: recipient
                                    type: address
                                  -
                                    name: amount
                                    type: uint256
                                name: transferFrom
                                stateMutability: Nonpayable
                                type: Function
                              -
                                inputs:
                                  -
                                    name: newOwner
                                    type: address
                                name: transferOwnership
                                stateMutability: Nonpayable
                                type: Function
                            items:
                              type: object
                              properties:
                                inputs:
                                  type: array
                                  example:
                                    -
                                      name: name_
                                      type: string
                                    -
                                      name: symbol_
                                      type: string
                                  items:
                                    type: object
                                    properties:
                                      name: { type: string, example: name_ }
                                      type: { type: string, example: string }
                                stateMutability:
                                  type: string
                                  example: Nonpayable
                                type:
                                  type: string
                                  example: Constructor
                      origin_energy_limit:
                        type: integer
                        example: 10000000
                      contract_address:
                        type: string
                        example: TXLAQ63Xg1NAzckPwKHvzw7CSEmLMEqcdj
                      code_hash:
                        type: string
                        example: 9a2cb3016d11c0fbbe0b84f326d8d9562acf36c5f2c40045b92cbdcb24521fd4
                  0:
                    type: integer
                    example: 200
      tags:
        - 'Tron Blockchain Queries'
    parameters:
      -
        in: path
        name: contract_address
        description: 'The contract address'
        example: TWrTTVizHkF3LxTiWE9vCnhWC7CBpNXe22
        required: true
        schema:
          type: string
  '/api/v2/tron/balances/{address}/trc10/{token_id}':
    get:
      summary: 'Get TRC10 balance'
      operationId: getTRC10Balance
      description: 'This method returns the balance of the specified address for the specified token'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Tron Blockchain Queries'
    parameters:
      -
        in: path
        name: address
        description: 'The address to fetch the balance for'
        example: TVF2Mp9QY7FEGTnr3DBpFLobA6jguHyMvi
        required: true
        schema:
          type: string
      -
        in: path
        name: token_id
        description: 'The token id'
        example: '1000016'
        required: true
        schema:
          type: string
  /api/v2/tron/freeze:
    post:
      summary: 'Freeze balance'
      operationId: freezeBalance
      description: "Freezing is used to obtain resources, such as Bandwidth and Energy, which are required to perform transactions on the Tron network. Freezing balance is a requirement for delegating resources to other addresses.\nTo ensure proper freezing of balance, you need to ensure that you have enough balance to freeze"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Freezed balance'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Balance frozen'
                  data:
                    result: true
                    txid: 9a0799630a4523b2caa5855b172ad75a5dfac9589a20441e7fe0622816c29023
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Balance frozen'
                  data:
                    type: object
                    properties:
                      result:
                        type: boolean
                        example: true
                      txid:
                        type: string
                        example: 9a0799630a4523b2caa5855b172ad75a5dfac9589a20441e7fe0622816c29023
        422:
          description: 'Freezing failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  message: 'Freezing failed'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  message:
                    type: string
                    example: 'Freezing failed'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Tron Staking'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: 'Must match the regex /^T[1-9A-HJ-NP-Za-km-z]{33}$/.'
                  example: TVQzpd28yXB1ETsf5NMZMHjvvAE3LXEDAK
                amount:
                  type: number
                  description: ''
                  example: 100.0
                resource:
                  type: string
                  description: ''
                  example: ENERGY
                  enum:
                    - BANDWIDTH
                    - ENERGY
                privatekey:
                  type: string
                  description: ''
                  example: d03bb000a507deef81361407786b07fbca44dfe000e2ca9c7dadd4b4e529c000
              required:
                - address
                - amount
                - resource
                - privatekey
  /api/v2/tron/unfreeze:
    post:
      summary: 'Unfreeze balance'
      operationId: unfreezeBalance
      description: "Unfreezing is used to release resources, such as Bandwidth and Energy, which are required to perform transactions on the Tron network. Unfreezing balance is a requirement for delegating resources to other addresses.\nTo ensure proper unfreezing of balance, you need to ensure that you already freezed balance to this address"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Unfreezed balance'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Balance unfrozen'
                  data:
                    result: true
                    txid: c78d5946c9718f763c8a19e4f3dffedefd6319df5bfc337cb5a3d19f03f2cbcd
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Balance unfrozen'
                  data:
                    type: object
                    properties:
                      result:
                        type: boolean
                        example: true
                      txid:
                        type: string
                        example: c78d5946c9718f763c8a19e4f3dffedefd6319df5bfc337cb5a3d19f03f2cbcd
        422:
          description: 'Freezing failed'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'class org.tron.core.exception.ContractValidateException : no frozenBalance(Energy)'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'class org.tron.core.exception.ContractValidateException : no frozenBalance(Energy)'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Tron Staking'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: 'Must match the regex /^T[1-9A-HJ-NP-Za-km-z]{33}$/.'
                  example: TVQzpd28yXB1ETsf5NMZMHjvvAE3LXEDAK
                amount:
                  type: number
                  description: ''
                  example: 100.0
                resource:
                  type: string
                  description: ''
                  example: ENERGY
                  enum:
                    - BANDWIDTH
                    - ENERGY
                privatekey:
                  type: string
                  description: ''
                  example: d03bb000a507deef81361407786b07fbca44dfe000e2ca9c7dadd4b4e529c000
              required:
                - address
                - amount
                - resource
                - privatekey
  /api/v2/tron/delegate:
    post:
      summary: ''
      operationId: postApiV2TronDelegate
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Delegated
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: Delegated
                  data:
                    result: true
                    txid: 08a9de94df7ff9e0983a91013921f4ff170c42d9b6b6f034d54228502cfe3809
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Delegated
                  data:
                    type: object
                    properties:
                      result:
                        type: boolean
                        example: true
                      txid:
                        type: string
                        example: 08a9de94df7ff9e0983a91013921f4ff170c42d9b6b6f034d54228502cfe3809
        422:
          description: 'Receiver same as owner'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'class org.tron.core.exception.ContractValidateException : receiverAddress must not be the same as ownerAddress'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'class org.tron.core.exception.ContractValidateException : receiverAddress must not be the same as ownerAddress'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Tron Staking'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: 'Must match the regex /^T[1-9A-HJ-NP-Za-km-z]{33}$/.'
                  example: TVQzpd28yXB1ETsf5NMZMHjvvAE3LXEDAK
                amount:
                  type: number
                  description: ''
                  example: 100.0
                receiver:
                  type: string
                  description: ''
                  example: TVQzpd28yXB1ETsf5NMZMHjvvAE3LXEDAK
                resource:
                  type: string
                  description: ''
                  example: ENERGY
                  enum:
                    - BANDWIDTH
                    - ENERGY
                privatekey:
                  type: string
                  description: ''
                  example: d03bb000a507deef81361407786b07fbca44dfe000e2ca9c7dadd4b4e529c000
              required:
                - address
                - amount
                - receiver
                - resource
                - privatekey
  /api/v2/tron/undelegate:
    post:
      summary: 'Undelegate ressources'
      operationId: undelegateRessources
      description: "Undelegation is used to release delegated resources, such as Bandwidth and Energy, which are required to perform transactions on the Tron network. Undelegating balance is a requirement for voting for Super Representatives and obtaining rewards.\nTo ensure proper delegation of balance, you need to ensure that you already delegated ressources to this address"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Undelegated
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: Undelegated
                  data:
                    result: true
                    txid: 5b95fc968984975a4dac5cf5a82b9c265ffae1fc1d227a7c2be5ab4ff74d3ecb
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Undelegated
                  data:
                    type: object
                    properties:
                      result:
                        type: boolean
                        example: true
                      txid:
                        type: string
                        example: 5b95fc968984975a4dac5cf5a82b9c265ffae1fc1d227a7c2be5ab4ff74d3ecb
        422:
          description: 'Not enough freezed balance'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'class org.tron.core.exception.ContractValidateException : delegated Resource does not exist'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'class org.tron.core.exception.ContractValidateException : delegated Resource does not exist'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Tron Staking'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: 'Must match the regex /^T[1-9A-HJ-NP-Za-km-z]{33}$/.'
                  example: TVQzpd28yXB1ETsf5NMZMHjvvAE3LXEDAK
                amount:
                  type: number
                  description: ''
                  example: 100.0
                receiver:
                  type: string
                  description: ''
                  example: TVQzpd28yXB1ETsf5NMZMHjvvAE3LXEDAK
                resource:
                  type: string
                  description: ''
                  example: ENERGY
                  enum:
                    - BANDWIDTH
                    - ENERGY
                privatekey:
                  type: string
                  description: ''
                  example: d03bb000a507deef81361407786b07fbca44dfe000e2ca9c7dadd4b4e529c000
              required:
                - address
                - amount
                - receiver
                - resource
                - privatekey
  /api/v2/tron/chainparameters:
    get:
      summary: 'Get chain parameters'
      operationId: getChainParameters
      description: 'This method returns the chain parameters of the Tron blockchain'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Chain parameters fetched'
                  data:
                    chainParameter:
                      -
                        key: getMaintenanceTimeInterval
                        value: 21600000
                      -
                        key: getAccountUpgradeCost
                        value: 9999000000
                      -
                        key: getCreateAccountFee
                        value: 100000
                      -
                        key: getTransactionFee
                        value: 1000
                      -
                        key: getAssetIssueFee
                        value: 1024000000
                      -
                        key: getWitnessPayPerBlock
                        value: 16000000
                      -
                        key: getWitnessStandbyAllowance
                        value: 100000000
                      -
                        key: getCreateNewAccountFeeInSystemContract
                        value: 1000000
                      -
                        key: getCreateNewAccountBandwidthRate
                        value: 1
                      -
                        key: getAllowCreationOfContracts
                        value: 1
                      -
                        key: getRemoveThePowerOfTheGr
                        value: -1
                      -
                        key: getEnergyFee
                        value: 420
                      -
                        key: getExchangeCreateFee
                        value: 1024000000
                      -
                        key: getMaxCpuTimeOfOneTx
                        value: 160
                      -
                        key: getAllowUpdateAccountName
                      -
                        key: getAllowSameTokenName
                        value: 1
                      -
                        key: getAllowDelegateResource
                        value: 1
                      -
                        key: getTotalEnergyLimit
                        value: 90000000000
                      -
                        key: getAllowTvmTransferTrc10
                        value: 1
                      -
                        key: getTotalEnergyCurrentLimit
                        value: 90000000000
                      -
                        key: getAllowMultiSign
                        value: 1
                      -
                        key: getAllowAdaptiveEnergy
                      -
                        key: getTotalEnergyTargetLimit
                        value: 6250000
                      -
                        key: getTotalEnergyAverageUsage
                      -
                        key: getUpdateAccountPermissionFee
                        value: 100000000
                      -
                        key: getMultiSignFee
                        value: 1000000
                      -
                        key: getAllowAccountStateRoot
                      -
                        key: getAllowProtoFilterNum
                      -
                        key: getAllowTvmConstantinople
                        value: 1
                      -
                        key: getAllowTvmSolidity059
                        value: 1
                      -
                        key: getAllowTvmIstanbul
                        value: 1
                      -
                        key: getAllowShieldedTRC20Transaction
                        value: 1
                      -
                        key: getForbidTransferToContract
                      -
                        key: getAdaptiveResourceLimitTargetRatio
                        value: 10
                      -
                        key: getAdaptiveResourceLimitMultiplier
                        value: 1000
                      -
                        key: getChangeDelegation
                        value: 1
                      -
                        key: getWitness127PayPerBlock
                        value: 10000000
                      -
                        key: getAllowMarketTransaction
                        value: 1
                      -
                        key: getMarketSellFee
                      -
                        key: getMarketCancelFee
                      -
                        key: getAllowPBFT
                        value: 1
                      -
                        key: getAllowTransactionFeePool
                        value: 1
                      -
                        key: getMaxFeeLimit
                        value: 15000000000
                      -
                        key: getAllowOptimizeBlackHole
                        value: 1
                      -
                        key: getAllowNewResourceModel
                      -
                        key: getAllowTvmFreeze
                        value: 1
                      -
                        key: getAllowTvmVote
                        value: 1
                      -
                        key: getAllowTvmLondon
                        value: 1
                      -
                        key: getAllowTvmCompatibleEvm
                      -
                        key: getAllowAccountAssetOptimization
                      -
                        key: getFreeNetLimit
                        value: 600
                      -
                        key: getTotalNetLimit
                        value: 43200000000
                      -
                        key: getAllowHigherLimitForMaxCpuTimeOfOneTx
                        value: 1
                      -
                        key: getAllowAssetOptimization
                        value: 1
                      -
                        key: getAllowNewReward
                        value: 1
                      -
                        key: getMemoFee
                        value: 1000000
                      -
                        key: getAllowDelegateOptimization
                        value: 1
                      -
                        key: getUnfreezeDelayDays
                        value: 14
                      -
                        key: getAllowOptimizedReturnValueOfChainId
                        value: 1
                      -
                        key: getAllowDynamicEnergy
                        value: 1
                      -
                        key: getDynamicEnergyThreshold
                        value: 3000000000
                      -
                        key: getDynamicEnergyIncreaseFactor
                        value: 2000
                      -
                        key: getDynamicEnergyMaxFactor
                        value: 12000
                      -
                        key: getAllowTvmShangHai
                        value: 1
                      -
                        key: getAllowCancelAllUnfreezeV2
                        value: 1
                      -
                        key: getMaxDelegateLockPeriod
                        value: 144000
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Chain parameters fetched'
                  data:
                    type: object
                    properties:
                      chainParameter:
                        type: array
                        example:
                          -
                            key: getMaintenanceTimeInterval
                            value: 21600000
                          -
                            key: getAccountUpgradeCost
                            value: 9999000000
                          -
                            key: getCreateAccountFee
                            value: 100000
                          -
                            key: getTransactionFee
                            value: 1000
                          -
                            key: getAssetIssueFee
                            value: 1024000000
                          -
                            key: getWitnessPayPerBlock
                            value: 16000000
                          -
                            key: getWitnessStandbyAllowance
                            value: 100000000
                          -
                            key: getCreateNewAccountFeeInSystemContract
                            value: 1000000
                          -
                            key: getCreateNewAccountBandwidthRate
                            value: 1
                          -
                            key: getAllowCreationOfContracts
                            value: 1
                          -
                            key: getRemoveThePowerOfTheGr
                            value: -1
                          -
                            key: getEnergyFee
                            value: 420
                          -
                            key: getExchangeCreateFee
                            value: 1024000000
                          -
                            key: getMaxCpuTimeOfOneTx
                            value: 160
                          -
                            key: getAllowUpdateAccountName
                          -
                            key: getAllowSameTokenName
                            value: 1
                          -
                            key: getAllowDelegateResource
                            value: 1
                          -
                            key: getTotalEnergyLimit
                            value: 90000000000
                          -
                            key: getAllowTvmTransferTrc10
                            value: 1
                          -
                            key: getTotalEnergyCurrentLimit
                            value: 90000000000
                          -
                            key: getAllowMultiSign
                            value: 1
                          -
                            key: getAllowAdaptiveEnergy
                          -
                            key: getTotalEnergyTargetLimit
                            value: 6250000
                          -
                            key: getTotalEnergyAverageUsage
                          -
                            key: getUpdateAccountPermissionFee
                            value: 100000000
                          -
                            key: getMultiSignFee
                            value: 1000000
                          -
                            key: getAllowAccountStateRoot
                          -
                            key: getAllowProtoFilterNum
                          -
                            key: getAllowTvmConstantinople
                            value: 1
                          -
                            key: getAllowTvmSolidity059
                            value: 1
                          -
                            key: getAllowTvmIstanbul
                            value: 1
                          -
                            key: getAllowShieldedTRC20Transaction
                            value: 1
                          -
                            key: getForbidTransferToContract
                          -
                            key: getAdaptiveResourceLimitTargetRatio
                            value: 10
                          -
                            key: getAdaptiveResourceLimitMultiplier
                            value: 1000
                          -
                            key: getChangeDelegation
                            value: 1
                          -
                            key: getWitness127PayPerBlock
                            value: 10000000
                          -
                            key: getAllowMarketTransaction
                            value: 1
                          -
                            key: getMarketSellFee
                          -
                            key: getMarketCancelFee
                          -
                            key: getAllowPBFT
                            value: 1
                          -
                            key: getAllowTransactionFeePool
                            value: 1
                          -
                            key: getMaxFeeLimit
                            value: 15000000000
                          -
                            key: getAllowOptimizeBlackHole
                            value: 1
                          -
                            key: getAllowNewResourceModel
                          -
                            key: getAllowTvmFreeze
                            value: 1
                          -
                            key: getAllowTvmVote
                            value: 1
                          -
                            key: getAllowTvmLondon
                            value: 1
                          -
                            key: getAllowTvmCompatibleEvm
                          -
                            key: getAllowAccountAssetOptimization
                          -
                            key: getFreeNetLimit
                            value: 600
                          -
                            key: getTotalNetLimit
                            value: 43200000000
                          -
                            key: getAllowHigherLimitForMaxCpuTimeOfOneTx
                            value: 1
                          -
                            key: getAllowAssetOptimization
                            value: 1
                          -
                            key: getAllowNewReward
                            value: 1
                          -
                            key: getMemoFee
                            value: 1000000
                          -
                            key: getAllowDelegateOptimization
                            value: 1
                          -
                            key: getUnfreezeDelayDays
                            value: 14
                          -
                            key: getAllowOptimizedReturnValueOfChainId
                            value: 1
                          -
                            key: getAllowDynamicEnergy
                            value: 1
                          -
                            key: getDynamicEnergyThreshold
                            value: 3000000000
                          -
                            key: getDynamicEnergyIncreaseFactor
                            value: 2000
                          -
                            key: getDynamicEnergyMaxFactor
                            value: 12000
                          -
                            key: getAllowTvmShangHai
                            value: 1
                          -
                            key: getAllowCancelAllUnfreezeV2
                            value: 1
                          -
                            key: getMaxDelegateLockPeriod
                            value: 144000
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                              example: getMaintenanceTimeInterval
                            value:
                              type: integer
                              example: 21600000
      tags:
        - 'Tron Blockchain Queries'
  /api/v2/tron/transactions/trc10:
    post:
      summary: 'Create ERC20 transaction'
      operationId: createERC20Transaction
      description: "This method creates a new ERC20 transaction. <br>\nIf the transaction is successful, it will return the transaction hash. <br>\nIf the transaction fails, it will return an error message. <br>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created transaction'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created transaction'
                  data:
                    txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created transaction'
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                        example: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
        422:
          description: 'Wrong privatekey'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Validate signature error: 0984bea42fc16d38512ef3f3ae0ad36b7123d1804a8b284106005793d441b2dd2d1bfdad10ec2879e06a35bbb9a89f268b81b79bc35f6031784c32fe60eee65e01 is signed by TT61CoyUW1ZwkcpkZAcortLvpYk7TW4fgD but it is not contained of permission.'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validate signature error: 0984bea42fc16d38512ef3f3ae0ad36b7123d1804a8b284106005793d441b2dd2d1bfdad10ec2879e06a35bbb9a89f268b81b79bc35f6031784c32fe60eee65e01 is signed by TT61CoyUW1ZwkcpkZAcortLvpYk7TW4fgD but it is not contained of permission.'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Tron Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from.'
                  example: TLkkCeNdJKPNUwucdro84WjswkzM62LCTH
                to:
                  type: string
                  description: 'The address to send the transaction to.'
                  example: TUwmZghA7u2GxGxKaxM1mkCmsTF4wHs4vp
                tokenId:
                  type: string
                  description: 'The id of the token.'
                  example: '1004920'
                amount:
                  type: number
                  description: 'The amount to send.'
                  example: 1.0
                privatekey:
                  type: string
                  description: 'The private key of the sender.'
                  example: 708c419d1b9ae123047f70787a503b6ba51e048a27966e0220cc5feXXXXXXXXX
              required:
                - from
                - to
                - tokenId
                - amount
                - privatekey
  /api/v2/tron/paymaster:
    post:
      summary: 'Create Paymaster Request'
      operationId: createPaymasterRequest
      description: 'This endpoint is used to create a new paymaster request.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses: {  }
      tags:
        - Paymaster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of transaction.'
                  example: Tron
                  enum:
                    - TRX
                    - TRC10
                    - TRC20
                    - TRC721
                from:
                  type: string
                  description: 'The address to send the transaction from.'
                  example: TLkkCeNdJKPNUwucdro84WjswkzM62LCTH
                to:
                  type: string
                  description: 'The address to send the transaction to.'
                  example: TUwmZghA7u2GxGxKaxM1mkCmsTF4wHs4vp
                contractaddress:
                  type: string
                  description: 'The contract address of the token. This field is required when <code>type</code> is <code>TRC20</code> or <code>TRC721</code>.'
                  example: 0x708c419d1b9ae123047f70787a503b6ba51e048a27966e0220cc5feXXXXXXXXX
                tokenid:
                  type: number
                  description: 'The token id of the token. This field is required when <code>type</code> is <code>TRC721</code> or <code>TRC10</code>.'
                  example: 1.0
                amount:
                  type: number
                  description: 'The amount to send. This field is required when <code>type</code> is <code>Tron</code>, <code>TRC10</code>, or <code>TRC20</code>.'
                  example: 1.0
                privatekey:
                  type: string
                  description: 'The private key of the sender.'
                  example: 708c419d1b9ae123047f70787a503b6ba51e048a27966e0220cc5feXXXXXXXXX
                callback_url:
                  type: string
                  description: 'The callback url to send the response to.'
                  example: 'https://example.com/callback'
              required:
                - type
                - from
                - to
                - privatekey
    get:
      summary: 'Display all Paymaster Requests.'
      operationId: displayAllPaymasterRequests
      description: "The status is indicating the status of the request. Possible values are:\npending: the request is pending\nprocessing: the request is processing. We wait for a successful transaction.\ncompleted: the request is completed\nfailed - [reason]: the request failed, the string behind the dash shows the reason.\n\nAs soon as as the transaction is completed, you will see the resulted transaction in the response parameter 'txid'"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Paymaster
  '/api/v2/tron/paymaster/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Paymaster
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the paymaster.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v2/tron/paymaster/estimate:
    post:
      summary: 'Estimate Paymaster Fees'
      operationId: estimatePaymasterFees
      description: "This endpoint is used to estimate the fees for a paymaster request.\n\nWith the creation of a paymaster request you need to pay for the energy and bandwidth that is needed to process the transaction.\nTo simplify the process of calculating the fees, we provide this endpoint to estimate the fees for a transaction.\nThe ressouces wich a transaction needs to be procesed are energy and bandwidth. Bandwidth is needed to send the transaction to the network and energy is needed to execute the transaction.\n\nTherefore it differs between the transaction types and the smart contracts how much energy and bandwidth is needed.\n\nAfter setteling yor paymaster request the fees will be deducted from your credit balance. If you don't have enough funds on your balance, the request will fail."
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses: {  }
      tags:
        - Paymaster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of transaction.'
                  example: Tron
                  enum:
                    - TRX
                    - TRC10
                    - TRC20
                    - TRC721
                from:
                  type: string
                  description: 'The address to send the transaction from.'
                  example: TLkkCeNdJKPNUwucdro84WjswkzM62LCTH
                to:
                  type: string
                  description: 'The address to send the transaction to.'
                  example: TUwmZghA7u2GxGxKaxM1mkCmsTF4wHs4vp
                contractaddress:
                  type: string
                  description: 'The contract address of the token. This field is required when <code>type</code> is <code>TRC20</code> or <code>TRC721</code>.'
                  example: 0x708c419d1b9ae123047f70787a503b6ba51e048a27966e0220cc5feXXXXXXXXX
                tokenid:
                  type: number
                  description: 'The token id of the token. This field is required when <code>type</code> is <code>TRC721</code> or <code>TRC10</code>.'
                  example: 1.0
                amount:
                  type: number
                  description: 'The amount to send. This field is required when <code>type</code> is <code>Tron</code>, <code>TRC10</code>, or <code>TRC20</code>.'
                  example: 1.0
                privatekey:
                  type: string
                  description: 'The private key of the sender.'
                  example: 708c419d1b9ae123047f70787a503b6ba51e048a27966e0220cc5feXXXXXXXXX
                callback_url:
                  type: string
                  description: 'The callback url to send the response to.'
                  example: 'https://example.com/callback'
              required:
                - type
                - from
                - to
                - privatekey
  /api/v2/tron/webhooks:
    get:
      summary: 'Get all webhooks'
      operationId: getAllWebhooks
      description: 'Lists all webhooks created by the user.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Tron Webhooks'
    post:
      summary: 'Create webhook'
      operationId: createWebhook
      description: 'Creates a new webhook for real-time communication and event notification.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Webhook created'
                  data:
                    webhook: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook created'
                  data:
                    type: object
                    properties:
                      webhook:
                        type: string
                        example: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    status: 422
                    ok: false
                    message: 'Data validation failed'
                    errors:
                      from:
                        - 'The from field format is invalid.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      status:
                        type: integer
                        example: 422
                      ok:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: 'Data validation failed'
                      errors:
                        type: object
                        properties:
                          from:
                            type: array
                            example:
                              - 'The from field format is invalid.'
                            items:
                              type: string
      tags:
        - 'Tron Webhooks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The sender Tron address'
                  example:
                    - TWrTTVizHkF3LxTiWE9vCnhWC7CBpNXe22
                to:
                  type: string
                  description: 'The receiver Tron address'
                  example:
                    - TWrTTVizHkF3LxTiWE9vCnhWC7CBpNXe22
                url:
                  type: string
                  description: 'URL for webhook notifications (required). Must be a valid URL.'
                  example: 'http://vonrueden.com/'
                contractaddress:
                  type: string
                  description: ''
                  example:
                    - TWrTTVizHkF3LxTiWE9vCnhWC7CBpNXe22
                token_id:
                  type: string
                  description: 'This field is required when none of <code>from</code> and <code>to</code> are present.'
                  example: null
                type:
                  type: string
                  description: ''
                  example: TRC20
                  enum:
                    - TRX
                    - TRC10
                    - TRC20
                    - TRC721
              required:
                - url
  '/api/v2/tron/webhooks/{id}':
    get:
      summary: 'Get webhook'
      operationId: getWebhook
      description: 'Show the details of a Webhook'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Tron Webhooks'
    put:
      summary: 'Update webhook'
      operationId: updateWebhook
      description: 'Updates an existing webhook with the provided data.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Webhook updated'
                  data:
                    id: 9b73d6ee-8a8b-44c3-b2c6-0bd1e1d8cd9a
                    from: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    to: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    contractaddress: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    type: BEP20
                    token_id: null
                    url: 'http://blanda.com/debitis-et-id-nisi-qui-id.html'
                    is_active: true
                    is_invalid: false
                    old_id: null
                    created_at: '2024-02-29T14:51:35.000000Z'
                    updated_at: '2024-02-29T14:52:33.000000Z'
                    deleted_at: null
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook updated'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9b73d6ee-8a8b-44c3-b2c6-0bd1e1d8cd9a
                      from:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      to:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      contractaddress:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      type:
                        type: string
                        example: BEP20
                      token_id:
                        type: string
                        example: null
                      url:
                        type: string
                        example: 'http://blanda.com/debitis-et-id-nisi-qui-id.html'
                      is_active:
                        type: boolean
                        example: true
                      is_invalid:
                        type: boolean
                        example: false
                      old_id:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2024-02-29T14:51:35.000000Z'
                      updated_at:
                        type: string
                        example: '2024-02-29T14:52:33.000000Z'
                      deleted_at:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 404
                  ok: false
                  message: 'Webhook not found'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 404
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Webhook not found'
                  data:
                    type: array
                    example: []
      tags:
        - 'Tron Webhooks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The sender Tron address'
                  example:
                    - TWrTTVizHkF3LxTiWE9vCnhWC7CBpNXe22
                to:
                  type: string
                  description: 'The receiver Tron address'
                  example:
                    - TWrTTVizHkF3LxTiWE9vCnhWC7CBpNXe22
                url:
                  type: string
                  description: 'URL for webhook notifications (required). Must be a valid URL.'
                  example: 'http://vonrueden.com/'
                contractaddress:
                  type: string
                  description: ''
                  example:
                    - TWrTTVizHkF3LxTiWE9vCnhWC7CBpNXe22
                token_id:
                  type: string
                  description: 'This field is required when none of <code>from</code> and <code>to</code> are present.'
                  example: null
                type:
                  type: string
                  description: ''
                  example: TRC20
                  enum:
                    - TRX
                    - TRC10
                    - TRC20
                    - TRC721
              required:
                - url
    delete:
      summary: 'Delete webhook'
      operationId: deleteWebhook
      description: 'This method will delete the specified webhook.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Webhook deleted'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook deleted'
                  data:
                    type: array
                    example: []
      tags:
        - 'Tron Webhooks'
    parameters:
      -
        in: path
        name: id
        description: 'The UUID of the webhook you want to show.'
        example: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
        required: true
        schema:
          type: string
  /api/v2/tron/webhooks/notifications:
    get:
      summary: 'Display all Webhook Notifications'
      operationId: displayAllWebhookNotifications
      description: 'Lists all webhook notifications created by the user for the specific  Blockchain and Network'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Successfully fetched notifications'
                  current_page: 1
                  data:
                    -
                      id: 9ba28088-81d8-4aab-b711-650525081fe1
                      webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                      txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                      type: TRC20
                      contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                      from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                      to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                      tokenid: null
                      amount: null
                      blocknumber: '19499380'
                      status: failed
                      url: 'https://example.com'
                      success: false
                      attempts: 0
                      created_at: '2024-05-05T19:33:52.000000Z'
                      updated_at: '2024-05-05T19:33:54.000000Z'
                      network: testnet
                      blockchain: tron
                      response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully fetched notifications'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type: TRC20
                        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid: null
                        amount: null
                        blocknumber: '19499380'
                        status: failed
                        url: 'https://example.com'
                        success: false
                        attempts: 0
                        created_at: '2024-05-05T19:33:52.000000Z'
                        updated_at: '2024-05-05T19:33:54.000000Z'
                        network: testnet
                        blockchain: tron
                        response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id:
                          type: string
                          example: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid:
                          type: string
                          example: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type:
                          type: string
                          example: TRC20
                        contractaddress:
                          type: string
                          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from:
                          type: string
                          example: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to:
                          type: string
                          example: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: null
                        blocknumber:
                          type: string
                          example: '19499380'
                        status:
                          type: string
                          example: failed
                        url:
                          type: string
                          example: 'https://example.com'
                        success:
                          type: boolean
                          example: false
                        attempts:
                          type: integer
                          example: 0
                        created_at:
                          type: string
                          example: '2024-05-05T19:33:52.000000Z'
                        updated_at:
                          type: string
                          example: '2024-05-05T19:33:54.000000Z'
                        network:
                          type: string
                          example: testnet
                        blockchain:
                          type: string
                          example: tron
                        response:
                          type: string
                          example: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Tron Webhooks'
  /api/v2/tron/webhooks/notifications/failed:
    get:
      summary: 'Display all failed Webhook Notification'
      operationId: displayAllFailedWebhookNotification
      description: "Lists all failed webhook notifications created by the user for the specific  Blockchain and Network\nBased on the response you can use our /webhooks/notifications/{id}/retry to retry every failed webhook.\n\nAfter you started the retry process, the webhook will be removed from this list. should the retry process fail, the webhook will be added back to this list."
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Successfully fetched failed notifications'
                  current_page: 1
                  data:
                    -
                      id: 9ba28088-81d8-4aab-b711-650525081fe1
                      webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                      txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                      type: TRC20
                      contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                      from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                      to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                      tokenid: null
                      amount: null
                      blocknumber: '19499380'
                      status: failed
                      url: 'https://example.com'
                      success: false
                      attempts: 0
                      created_at: '2024-05-05T19:33:52.000000Z'
                      updated_at: '2024-05-05T19:33:54.000000Z'
                      network: testnet
                      blockchain: tron
                      response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully fetched failed notifications'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type: TRC20
                        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid: null
                        amount: null
                        blocknumber: '19499380'
                        status: failed
                        url: 'https://example.com'
                        success: false
                        attempts: 0
                        created_at: '2024-05-05T19:33:52.000000Z'
                        updated_at: '2024-05-05T19:33:54.000000Z'
                        network: testnet
                        blockchain: tron
                        response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id:
                          type: string
                          example: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid:
                          type: string
                          example: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type:
                          type: string
                          example: TRC20
                        contractaddress:
                          type: string
                          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from:
                          type: string
                          example: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to:
                          type: string
                          example: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: null
                        blocknumber:
                          type: string
                          example: '19499380'
                        status:
                          type: string
                          example: failed
                        url:
                          type: string
                          example: 'https://example.com'
                        success:
                          type: boolean
                          example: false
                        attempts:
                          type: integer
                          example: 0
                        created_at:
                          type: string
                          example: '2024-05-05T19:33:52.000000Z'
                        updated_at:
                          type: string
                          example: '2024-05-05T19:33:54.000000Z'
                        network:
                          type: string
                          example: testnet
                        blockchain:
                          type: string
                          example: tron
                        response:
                          type: string
                          example: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Tron Webhooks'
  '/api/v2/tron/webhooks/notifications/{id}/retry':
    post:
      summary: 'Retry a failed Webhook Notification'
      operationId: retryAFailedWebhookNotification
      description: 'Retries a failed webhook notification'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses: {  }
      tags:
        - 'Tron Webhooks'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v2/ethereum/blocks/number:
    get:
      summary: 'Get latest block number'
      operationId: getLatestBlockNumber
      description: 'This Method returns the latest block number'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Latest block number fetched'
                  data: 19151363
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Latest block number fetched'
                  data:
                    type: integer
                    example: 19151363
      tags:
        - 'Ethereum Blockchain Queries'
  '/api/v2/ethereum/blocks/{block_number}':
    get:
      summary: 'Get block by number or hash'
      operationId: getBlockByNumberOrHash
      description: 'This Method returns the block by its number'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                nullable: true
      tags:
        - 'Ethereum Blockchain Queries'
    parameters:
      -
        in: path
        name: block_number
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '19151363'
  /api/v2/ethereum/transactions:
    get:
      summary: 'List Transactions'
      operationId: listTransactions
      description: "This method lists your transaction history. It lists all transactions including ERC20 and ERC721 transactions. <br>\n Please note that we dont index your addresses. We list only transactions that were made with the Chaingateway API"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Paginated result'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transactions'
                  current_page: 1
                  data:
                    -
                      id: 1
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: default
                      txid: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      contractaddress: null
                      amount: '0.001000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T09:00:18.000000Z'
                      updated_at: '2024-02-13T09:00:18.000000Z'
                    -
                      id: 4
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: default
                      txid: '0x5da4f33531fab8ecfe6f36a1300265f772b5f11c2da736a39b0b4b0c1b97c3e2'
                      from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      contractaddress: null
                      amount: '0.384200000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:01:26.000000Z'
                      updated_at: '2024-02-13T10:01:26.000000Z'
                    -
                      id: 5
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x1b7ecf53527e9a9ec09c448b2f594357e8a09f52c02c96d0de33fe435750d371'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:34:34.000000Z'
                      updated_at: '2024-02-13T10:34:34.000000Z'
                    -
                      id: 6
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x5b293a7289e8405fb8402f0bfa6e7464fdc9bfbc11aaa7874d4a7216b4079729'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:35:57.000000Z'
                      updated_at: '2024-02-13T10:35:57.000000Z'
                    -
                      id: 7
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x8830bd8d0cf0dfeac6d4cc345888ae52f9ca8b3a3cf37859919786bd9cd8ae2f'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '100.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T12:22:03.000000Z'
                      updated_at: '2024-02-13T12:22:03.000000Z'
                    -
                      id: 8
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T12:36:48.000000Z'
                      updated_at: '2024-02-13T12:36:48.000000Z'
                  first_page_url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions'
                  per_page: 50
                  prev_page_url: null
                  to: 6
                  total: 6
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transactions'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: default
                        txid: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                        from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress: null
                        amount: '0.001000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T09:00:18.000000Z'
                        updated_at: '2024-02-13T09:00:18.000000Z'
                      -
                        id: 4
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: default
                        txid: '0x5da4f33531fab8ecfe6f36a1300265f772b5f11c2da736a39b0b4b0c1b97c3e2'
                        from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress: null
                        amount: '0.384200000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:01:26.000000Z'
                        updated_at: '2024-02-13T10:01:26.000000Z'
                      -
                        id: 5
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x1b7ecf53527e9a9ec09c448b2f594357e8a09f52c02c96d0de33fe435750d371'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:34:34.000000Z'
                        updated_at: '2024-02-13T10:34:34.000000Z'
                      -
                        id: 6
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x5b293a7289e8405fb8402f0bfa6e7464fdc9bfbc11aaa7874d4a7216b4079729'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:35:57.000000Z'
                        updated_at: '2024-02-13T10:35:57.000000Z'
                      -
                        id: 7
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x8830bd8d0cf0dfeac6d4cc345888ae52f9ca8b3a3cf37859919786bd9cd8ae2f'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '100.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T12:22:03.000000Z'
                        updated_at: '2024-02-13T12:22:03.000000Z'
                      -
                        id: 8
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T12:36:48.000000Z'
                        updated_at: '2024-02-13T12:36:48.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 1
                        blockchain:
                          type: string
                          example: bsc
                        network:
                          type: string
                          example: testnet
                        type:
                          type: string
                          example: default
                        txid:
                          type: string
                          example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                        from:
                          type: string
                          example: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to:
                          type: string
                          example: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: '0.001000000000'
                        tokenid:
                          type: string
                          example: null
                        responseJson:
                          type: string
                          example: null
                        httpStatus:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2024-02-13T09:00:18.000000Z'
                        updated_at:
                          type: string
                          example: '2024-02-13T09:00:18.000000Z'
                  first_page_url:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions'
                  per_page:
                    type: integer
                    example: 50
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 6
                  total:
                    type: integer
                    example: 6
      tags:
        - 'Ethereum Transactions'
    post:
      summary: 'Create transaction'
      operationId: createTransaction
      description: 'This method creates a new transaction. <br>'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created'
                  data:
                    adderess: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created'
                  data:
                    type: object
                    properties:
                      adderess:
                        type: string
                        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        401:
          description: 'Wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 401
                  ok: false
                  message: 'Wrong password provided'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 401
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Wrong password provided'
                  errors:
                    type: array
                    example: []
        422:
          description: 'Insufficent funds'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Ethereum Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                amount:
                  type: string
                  description: 'The amount to send.'
                  example: '1000000000000000000'
                gas:
                  type: integer
                  description: 'The gas limit for the transaction.'
                  example: 21000
                gasprice:
                  type: integer
                  description: 'The gas price for the transaction.'
                  example: 1000000000
                maxPriorityFeePerGas:
                  type: integer
                  description: 'The maximum priority fee per gas for the transaction.'
                  example: 1000000000
                maxFeePerGas:
                  type: integer
                  description: 'The maximum fee per gas for the transaction.'
                  example: 1000000000
                password:
                  type: string
                  description: 'The password for the wallet.'
                  example: password
                data:
                  type: string
                  description: 'The data for the transaction.'
                  example: 0x
                nonce:
                  type: string
                  description: 'The nonce for the transaction.'
                  example: '0'
              required:
                - from
                - to
                - amount
                - password
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter. The page number'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1'
  '/api/v2/ethereum/transactions/{txid}':
    get:
      summary: 'Get transaction'
      operationId: getTransaction
      description: 'This method shows a transaction'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Decoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction'
                  data:
                    transaction:
                      blockHash: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                      blockNumber: '37701506'
                      from: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                      gas: '21000'
                      gasPrice: '3.0000000000'
                      hash: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      nonce: '14'
                      to: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      transactionIndex: '8'
                      maxFeePerGas: null
                      maxPriorityFeePerGas: null
                      amount: '0.001000000000000000'
                      contractaddress: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      type: ETH
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          blockHash:
                            type: string
                            example: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                          blockNumber:
                            type: string
                            example: '37701506'
                          from:
                            type: string
                            example: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                          gas:
                            type: string
                            example: '21000'
                          gasPrice:
                            type: string
                            example: '3.0000000000'
                          hash:
                            type: string
                            example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                          nonce:
                            type: string
                            example: '14'
                          to:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          transactionIndex:
                            type: string
                            example: '8'
                          maxFeePerGas:
                            type: string
                            example: null
                          maxPriorityFeePerGas:
                            type: string
                            example: null
                          amount:
                            type: string
                            example: '0.001000000000000000'
                          contractaddress:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          type:
                            type: string
                            example: ETH
        422:
          description: 'Transaction not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'transaction not found'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'transaction not found'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Ethereum Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  '/api/v2/ethereum/transactions/{txid}/decoded':
    get:
      summary: 'Get transaction'
      operationId: getTransaction
      description: 'This method shows a transaction'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Decoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction'
                  data:
                    transaction:
                      blockHash: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                      blockNumber: '37701506'
                      from: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                      gas: '21000'
                      gasPrice: '3.0000000000'
                      hash: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      nonce: '14'
                      to: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      transactionIndex: '8'
                      maxFeePerGas: null
                      maxPriorityFeePerGas: null
                      amount: '0.001000000000000000'
                      contractaddress: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      type: ETH
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          blockHash:
                            type: string
                            example: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                          blockNumber:
                            type: string
                            example: '37701506'
                          from:
                            type: string
                            example: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                          gas:
                            type: string
                            example: '21000'
                          gasPrice:
                            type: string
                            example: '3.0000000000'
                          hash:
                            type: string
                            example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                          nonce:
                            type: string
                            example: '14'
                          to:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          transactionIndex:
                            type: string
                            example: '8'
                          maxFeePerGas:
                            type: string
                            example: null
                          maxPriorityFeePerGas:
                            type: string
                            example: null
                          amount:
                            type: string
                            example: '0.001000000000000000'
                          contractaddress:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          type:
                            type: string
                            example: ETH
        422:
          description: 'Transaction not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'transaction not found'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'transaction not found'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Ethereum Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  /api/v2/ethereum/addresses:
    get:
      summary: 'List addresses'
      operationId: listAddresses
      description: 'Lists all addresses you have created but not yet deleted'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Ethereum Addresses'
    post:
      summary: 'Create address'
      operationId: createAddress
      description: "Creates a new address wich can be used to send and receive crypto currencies, ERC20 and ERC721 tokens.\nplease provide a stron password within the request body. You will need the password everytime you interact with your address.\n\n<aside class=\"notice\">We do not store Passowrds! If you lose it, we cannot restore your wallet! </aside>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Address created'
                  data:
                    adderess: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address created'
                  data:
                    type: object
                    properties:
                      adderess:
                        type: string
                        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Your address limit exceeded. Please upgrade your plan'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Your address limit exceeded. Please upgrade your plan'
                  data:
                    type: array
                    example: []
      tags:
        - 'Ethereum Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: architecto
              required:
                - password
  '/api/v2/ethereum/addresses/{address}':
    delete:
      summary: 'Delete address'
      operationId: deleteAddress
      description: 'This method will delete your address. This decreases your used address metrics'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address deleted'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address deleted'
                  data:
                    type: array
                    example: []
      tags:
        - 'Ethereum Addresses'
    parameters:
      -
        in: path
        name: address
        description: 'The address you want to delete.'
        example: '0xd280406b68901ae4F2431d1830dF5232F49C19fA'
        required: true
        schema:
          type: string
  '/api/v2/ethereum/balances/{address}':
    get:
      summary: 'Get balance of an address'
      operationId: getBalanceOfAnAddress
      description: 'Get the balance of an address'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Balance fetched'
                  data: '0.000000000000000000'
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Balance fetched'
                  data:
                    type: string
                    example: '0.000000000000000000'
      tags:
        - 'Ethereum Blockchain Queries'
    parameters:
      -
        in: path
        name: address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0x2214C41B139d8752bf8Bf17BDfee5B6EA4E3157B'
  '/api/v2/ethereum/balances/{address}/erc20/{contract_address}':
    get:
      summary: 'Get balance of an ERC20 token'
      operationId: getBalanceOfAnERC20Token
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: '{ "status": 200, "ok": true, "message": "ERC20 balance fetched", "data": "0.000000" }'
      tags:
        - 'Ethereum Blockchain Queries'
    parameters:
      -
        in: path
        name: address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0x2214C41B139d8752bf8Bf17BDfee5B6EA4E3157B'
      -
        in: path
        name: contract_address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0x388C818CA8B9251b393131C08a736A67ccB19297'
  '/api/v2/ethereum/transactions/{txid}/receipt/{decoded}':
    get:
      summary: 'Get receipt'
      operationId: getReceipt
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Encoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction receipt'
                  data:
                    transaction:
                      blockHash: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                      blockNumber: '0x23f4782'
                      contractAddress: null
                      cumulativeGasUsed: '0x993f6'
                      effectiveGasPrice: '0xb2d05e00'
                      from: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                      gasUsed: '0x5208'
                      logs: []
                      logsBloom: '0x
                      status: '0x1'
                      to: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      transactionHash: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      transactionIndex: '0x8'
                      type: '0x0'
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction receipt'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          blockHash:
                            type: string
                            example: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                          blockNumber:
                            type: string
                            example: '0x23f4782'
                          contractAddress:
                            type: string
                            example: null
                          cumulativeGasUsed:
                            type: string
                            example: '0x993f6'
                          effectiveGasPrice:
                            type: string
                            example: '0xb2d05e00'
                          from:
                            type: string
                            example: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                          gasUsed:
                            type: string
                            example: '0x5208'
                          logs:
                            type: array
                            example: []
                          logsBloom:
                            type: string
                            example: '0x
                          status:
                            type: string
                            example: '0x1'
                          to:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          transactionHash:
                            type: string
                            example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                          transactionIndex:
                            type: string
                            example: '0x8'
                          type:
                            type: string
                            example: '0x0'
        422:
          description: 'Transaction receipt not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'transaction not found'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'transaction not found'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Ethereum Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  /api/v2/ethereum/transactions/erc20:
    post:
      summary: 'Create ERC20 transaction'
      operationId: createERC20Transaction
      description: 'This method creates a new ERC20 transaction. <br>'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created'
                  data:
                    adderess: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created'
                  data:
                    type: object
                    properties:
                      adderess:
                        type: string
                        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        401:
          description: 'Wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 401
                  ok: false
                  message: 'Wrong password provided'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 401
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Wrong password provided'
                  errors:
                    type: array
                    example: []
        422:
          description: 'Insufficent funds'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Ethereum Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                contractaddress:
                  type: string
                  description: 'The address of the ERC20 contract. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                gas:
                  type: integer
                  description: 'The gas limit for the transaction.'
                  example: 21000
                gasprice:
                  type: integer
                  description: 'The gas price for the transaction.'
                  example: 1000000000
                maxPriorityFeePerGas:
                  type: number
                  description: 'The maximum priority fee per gas for the transaction.'
                  example: 1000000000.0
                maxFeePerGas:
                  type: number
                  description: 'The maximum fee per gas for the transaction.'
                  example: 1000000000.0
                password:
                  type: string
                  description: 'The password to unlock the wallet.'
                  example: password123
                data:
                  type: string
                  description: 'The data to send with the transaction.'
                  example: '0x123456'
                nonce:
                  type: string
                  description: 'The nonce for the transaction.'
                  example: '0x123456'
              required:
                - from
                - contractaddress
                - to
                - password
  /api/v2/ethereum/transactions/erc721:
    post:
      summary: 'Create ERC721 transaction'
      operationId: createERC721Transaction
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created'
                  data:
                    txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created'
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                        example: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
        401:
          description: 'Wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 401
                  ok: false
                  message: 'Wrong password provided'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 401
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Wrong password provided'
                  errors:
                    type: array
                    example: []
        422:
          description: 'Insufficent funds'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Ethereum Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                contractaddress:
                  type: string
                  description: 'The address of the ERC721 contract. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                tokenId:
                  type: integer
                  description: 'The token ID to send.'
                  example: 1
                gas:
                  type: integer
                  description: 'The gas limit for the transaction.'
                  example: 21000
                gasprice:
                  type: string
                  description: 'The gas price for the transaction.'
                  example: '1000000000'
                maxPriorityFeePerGas:
                  type: string
                  description: ''
                  example: architecto
                maxFeePerGas:
                  type: string
                  description: ''
                  example: architecto
                password:
                  type: string
                  description: ''
                  example: '|]|{+-'
                data:
                  type: string
                  description: ''
                  example: architecto
                nonce:
                  type: string
                  description: ''
                  example: architecto
              required:
                - from
                - contractaddress
                - to
                - tokenId
                - gas
                - password
  '/api/v2/ethereum/erc20/{contract_address}':
    get:
      summary: 'Get ERC20 contract information'
      operationId: getERC20ContractInformation
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  data: data
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: string
                    example: data
      tags:
        - 'Ethereum Blockchain Queries'
    parameters:
      -
        in: path
        name: contract_address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0x388C818CA8B9251b393131C08a736A67ccB19297'
  /api/v2/ethereum/addresses/import:
    post:
      summary: 'Import address'
      operationId: importAddress
      description: 'This method will import a keystore file. Please note that it can take up to a minute before you will be able to use the keystore file!'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address exportet'
                  data:
                    filename: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                    content:
                      address: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      crypto:
                        cipher: aes-128-ctr
                        ciphertext: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                        cipherparams:
                          iv: fa0b928e27c18699f49398c723e05578
                        kdf: scrypt
                        kdfparams:
                          dklen: 32
                          'n': 262144
                          p: 1
                          r: 8
                          salt: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                        mac: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                      id: 6c6cb213-e208-43af-8cc4-5e428636bf47
                      version: 3
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address exportet'
                  data:
                    type: object
                    properties:
                      filename:
                        type: string
                        example: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      content:
                        type: object
                        properties:
                          address:
                            type: string
                            example: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                          crypto:
                            type: object
                            properties:
                              cipher:
                                type: string
                                example: aes-128-ctr
                              ciphertext:
                                type: string
                                example: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                              cipherparams:
                                type: object
                                properties:
                                  iv:
                                    type: string
                                    example: fa0b928e27c18699f49398c723e05578
                              kdf:
                                type: string
                                example: scrypt
                              kdfparams:
                                type: object
                                properties:
                                  dklen:
                                    type: integer
                                    example: 32
                                  'n':
                                    type: integer
                                    example: 262144
                                  p:
                                    type: integer
                                    example: 1
                                  r:
                                    type: integer
                                    example: 8
                                  salt:
                                    type: string
                                    example: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                              mac:
                                type: string
                                example: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                          id:
                            type: string
                            example: 6c6cb213-e208-43af-8cc4-5e428636bf47
                          version:
                            type: integer
                            example: 3
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    password:
                      - 'The password field is required.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - 'Ethereum Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: ''
                  example: architecto
                filename:
                  type: string
                  description: ''
                  example: architecto
                password:
                  type: string
                  description: ''
                  example: architecto
              required:
                - content
                - filename
                - password
  '/api/v2/ethereum/addresses/export/{address}':
    post:
      summary: 'Export address'
      operationId: exportAddress
      description: 'This method will export the keystore file and filename.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address exportet'
                  data:
                    filename: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                    content:
                      address: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      crypto:
                        cipher: aes-128-ctr
                        ciphertext: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                        cipherparams:
                          iv: fa0b928e27c18699f49398c723e05578
                        kdf: scrypt
                        kdfparams:
                          dklen: 32
                          'n': 262144
                          p: 1
                          r: 8
                          salt: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                        mac: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                      id: 6c6cb213-e208-43af-8cc4-5e428636bf47
                      version: 3
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address exportet'
                  data:
                    type: object
                    properties:
                      filename:
                        type: string
                        example: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      content:
                        type: object
                        properties:
                          address:
                            type: string
                            example: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                          crypto:
                            type: object
                            properties:
                              cipher:
                                type: string
                                example: aes-128-ctr
                              ciphertext:
                                type: string
                                example: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                              cipherparams:
                                type: object
                                properties:
                                  iv:
                                    type: string
                                    example: fa0b928e27c18699f49398c723e05578
                              kdf:
                                type: string
                                example: scrypt
                              kdfparams:
                                type: object
                                properties:
                                  dklen:
                                    type: integer
                                    example: 32
                                  'n':
                                    type: integer
                                    example: 262144
                                  p:
                                    type: integer
                                    example: 1
                                  r:
                                    type: integer
                                    example: 8
                                  salt:
                                    type: string
                                    example: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                              mac:
                                type: string
                                example: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                          id:
                            type: string
                            example: 6c6cb213-e208-43af-8cc4-5e428636bf47
                          version:
                            type: integer
                            example: 3
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    password:
                      - 'The password field is required.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - 'Ethereum Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: architecto
              required:
                - password
    parameters:
      -
        in: path
        name: address
        description: 'The address you want to export.'
        example: '0xd280406b68901ae4F2431d1830dF5232F49C19fA'
        required: true
        schema:
          type: string
  /api/v2/ethereum/gasprice:
    get:
      summary: ''
      operationId: getApiV2EthereumGasprice
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Gas price fetched'
          content:
            application/json:
              schema:
                type: object
                example:
                  ok: true
                  status: 200
                  message: 'Successfully parsed'
                  data:
                    gasPrice: '12.28'
                properties:
                  ok:
                    type: boolean
                    example: true
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully parsed'
                  data:
                    type: object
                    properties:
                      gasPrice:
                        type: string
                        example: '12.28'
      tags:
        - 'Ethereum Blockchain Queries'
  '/api/v2/ethereum/nfts/{contract_address}/owner/{token_id}':
    get:
      summary: ''
      operationId: getApiV2EthereumNftsContract_addressOwnerToken_id
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Ethereum Blockchain Queries'
    parameters:
      -
        in: path
        name: contract_address
        description: 'The contract address'
        example: '0x5e032243d507c743b061ef021e2ec7fcc6d3ab89'
        required: true
        schema:
          type: string
      -
        in: path
        name: token_id
        description: 'The token id'
        example: '1234'
        required: true
        schema:
          type: string
  '/api/v2/ethereum/nfts/{contract_address}/uri/{token_id}':
    get:
      summary: ''
      operationId: getApiV2EthereumNftsContract_addressUriToken_id
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Ethereum Blockchain Queries'
    parameters:
      -
        in: path
        name: contract_address
        description: 'The contract address'
        example: '0x5e032243d507c743b061ef021e2ec7fcc6d3ab89'
        required: true
        schema:
          type: string
      -
        in: path
        name: token_id
        description: 'The token id'
        example: '1234'
        required: true
        schema:
          type: string
  /api/v2/ethereum/webhooks:
    get:
      summary: 'Get all webhooks'
      operationId: getAllWebhooks
      description: 'Lists all webhooks created by the user.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Ethereum Webhooks'
    post:
      summary: 'Create webhook'
      operationId: createWebhook
      description: 'Creates a new webhook for real-time communication and event notification.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Webhook created'
                  data:
                    webhook: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook created'
                  data:
                    type: object
                    properties:
                      webhook:
                        type: string
                        example: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    status: 422
                    ok: false
                    message: 'Data validation failed'
                    errors:
                      from:
                        - 'The from field format is invalid.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      status:
                        type: integer
                        example: 422
                      ok:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: 'Data validation failed'
                      errors:
                        type: object
                        properties:
                          from:
                            type: array
                            example:
                              - 'The from field format is invalid.'
                            items:
                              type: string
      tags:
        - 'Ethereum Webhooks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'Sender address (required if not "to"). This field is required when <code>to</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                to:
                  type: string
                  description: 'Receiver address (required if not providing "from"). This field is required when <code>from</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                url:
                  type: string
                  description: 'URL for webhook notifications (required). Must be a valid URL.'
                  example: 'http://vonrueden.com/'
                contractaddress:
                  type: string
                  description: 'The Address of an Contract you want to track (Not allowwed on Bitcoin). This field is required when none of <code>from</code> and <code>to</code> are present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                token_id:
                  type: string
                  description: 'This field is required when none of <code>from</code> and <code>to</code> are present.'
                  example: null
                type:
                  type: string
                  description: ''
                  example: ERC20
                  enum:
                    - ETH
                    - ERC20
                    - ERC721
              required:
                - url
  '/api/v2/ethereum/webhooks/{id}':
    get:
      summary: 'Get webhook'
      operationId: getWebhook
      description: 'Show the details of a Webhook'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Ethereum Webhooks'
    put:
      summary: 'Update webhook'
      operationId: updateWebhook
      description: 'Updates an existing webhook with the provided data.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Webhook updated'
                  data:
                    id: 9b73d6ee-8a8b-44c3-b2c6-0bd1e1d8cd9a
                    from: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    to: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    contractaddress: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    type: BEP20
                    token_id: null
                    url: 'http://blanda.com/debitis-et-id-nisi-qui-id.html'
                    is_active: true
                    is_invalid: false
                    old_id: null
                    created_at: '2024-02-29T14:51:35.000000Z'
                    updated_at: '2024-02-29T14:52:33.000000Z'
                    deleted_at: null
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook updated'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9b73d6ee-8a8b-44c3-b2c6-0bd1e1d8cd9a
                      from:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      to:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      contractaddress:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      type:
                        type: string
                        example: BEP20
                      token_id:
                        type: string
                        example: null
                      url:
                        type: string
                        example: 'http://blanda.com/debitis-et-id-nisi-qui-id.html'
                      is_active:
                        type: boolean
                        example: true
                      is_invalid:
                        type: boolean
                        example: false
                      old_id:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2024-02-29T14:51:35.000000Z'
                      updated_at:
                        type: string
                        example: '2024-02-29T14:52:33.000000Z'
                      deleted_at:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 404
                  ok: false
                  message: 'Webhook not found'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 404
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Webhook not found'
                  data:
                    type: array
                    example: []
      tags:
        - 'Ethereum Webhooks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'Sender address (required if not "to"). This field is required when <code>to</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                to:
                  type: string
                  description: 'Receiver address (required if not providing "from"). This field is required when <code>from</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                url:
                  type: string
                  description: 'URL for webhook notifications (required). Must be a valid URL.'
                  example: 'http://vonrueden.com/'
                contractaddress:
                  type: string
                  description: 'The Address of an Contract you want to track (Not allowwed on Bitcoin). This field is required when none of <code>from</code> and <code>to</code> are present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                token_id:
                  type: string
                  description: 'This field is required when none of <code>from</code> and <code>to</code> are present.'
                  example: null
                type:
                  type: string
                  description: ''
                  example: ERC20
                  enum:
                    - ETH
                    - ERC20
                    - ERC721
              required:
                - url
    delete:
      summary: 'Delete webhook'
      operationId: deleteWebhook
      description: 'This method will delete the specified webhook.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Webhook deleted'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook deleted'
                  data:
                    type: array
                    example: []
      tags:
        - 'Ethereum Webhooks'
    parameters:
      -
        in: path
        name: id
        description: 'The UUID of the webhook you want to show.'
        example: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
        required: true
        schema:
          type: string
  /api/v2/ethereum/webhooks/notifications:
    get:
      summary: 'Display all Webhook Notifications'
      operationId: displayAllWebhookNotifications
      description: 'Lists all webhook notifications created by the user for the specific  Blockchain and Network'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Successfully fetched notifications'
                  current_page: 1
                  data:
                    -
                      id: 9ba28088-81d8-4aab-b711-650525081fe1
                      webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                      txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                      type: TRC20
                      contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                      from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                      to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                      tokenid: null
                      amount: null
                      blocknumber: '19499380'
                      status: failed
                      url: 'https://example.com'
                      success: false
                      attempts: 0
                      created_at: '2024-05-05T19:33:52.000000Z'
                      updated_at: '2024-05-05T19:33:54.000000Z'
                      network: testnet
                      blockchain: tron
                      response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully fetched notifications'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type: TRC20
                        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid: null
                        amount: null
                        blocknumber: '19499380'
                        status: failed
                        url: 'https://example.com'
                        success: false
                        attempts: 0
                        created_at: '2024-05-05T19:33:52.000000Z'
                        updated_at: '2024-05-05T19:33:54.000000Z'
                        network: testnet
                        blockchain: tron
                        response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id:
                          type: string
                          example: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid:
                          type: string
                          example: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type:
                          type: string
                          example: TRC20
                        contractaddress:
                          type: string
                          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from:
                          type: string
                          example: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to:
                          type: string
                          example: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: null
                        blocknumber:
                          type: string
                          example: '19499380'
                        status:
                          type: string
                          example: failed
                        url:
                          type: string
                          example: 'https://example.com'
                        success:
                          type: boolean
                          example: false
                        attempts:
                          type: integer
                          example: 0
                        created_at:
                          type: string
                          example: '2024-05-05T19:33:52.000000Z'
                        updated_at:
                          type: string
                          example: '2024-05-05T19:33:54.000000Z'
                        network:
                          type: string
                          example: testnet
                        blockchain:
                          type: string
                          example: tron
                        response:
                          type: string
                          example: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Ethereum Webhooks'
  /api/v2/ethereum/webhooks/notifications/failed:
    get:
      summary: 'Display all failed Webhook Notification'
      operationId: displayAllFailedWebhookNotification
      description: "Lists all failed webhook notifications created by the user for the specific  Blockchain and Network\nBased on the response you can use our /webhooks/notifications/{id}/retry to retry every failed webhook.\n\nAfter you started the retry process, the webhook will be removed from this list. should the retry process fail, the webhook will be added back to this list."
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Successfully fetched failed notifications'
                  current_page: 1
                  data:
                    -
                      id: 9ba28088-81d8-4aab-b711-650525081fe1
                      webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                      txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                      type: TRC20
                      contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                      from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                      to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                      tokenid: null
                      amount: null
                      blocknumber: '19499380'
                      status: failed
                      url: 'https://example.com'
                      success: false
                      attempts: 0
                      created_at: '2024-05-05T19:33:52.000000Z'
                      updated_at: '2024-05-05T19:33:54.000000Z'
                      network: testnet
                      blockchain: tron
                      response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully fetched failed notifications'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type: TRC20
                        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid: null
                        amount: null
                        blocknumber: '19499380'
                        status: failed
                        url: 'https://example.com'
                        success: false
                        attempts: 0
                        created_at: '2024-05-05T19:33:52.000000Z'
                        updated_at: '2024-05-05T19:33:54.000000Z'
                        network: testnet
                        blockchain: tron
                        response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id:
                          type: string
                          example: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid:
                          type: string
                          example: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type:
                          type: string
                          example: TRC20
                        contractaddress:
                          type: string
                          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from:
                          type: string
                          example: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to:
                          type: string
                          example: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: null
                        blocknumber:
                          type: string
                          example: '19499380'
                        status:
                          type: string
                          example: failed
                        url:
                          type: string
                          example: 'https://example.com'
                        success:
                          type: boolean
                          example: false
                        attempts:
                          type: integer
                          example: 0
                        created_at:
                          type: string
                          example: '2024-05-05T19:33:52.000000Z'
                        updated_at:
                          type: string
                          example: '2024-05-05T19:33:54.000000Z'
                        network:
                          type: string
                          example: testnet
                        blockchain:
                          type: string
                          example: tron
                        response:
                          type: string
                          example: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Ethereum Webhooks'
  '/api/v2/ethereum/webhooks/notifications/{id}/retry':
    post:
      summary: 'Retry a failed Webhook Notification'
      operationId: retryAFailedWebhookNotification
      description: 'Retries a failed webhook notification'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses: {  }
      tags:
        - 'Ethereum Webhooks'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v2/bsc/blocks/number:
    get:
      summary: 'Get latest block number'
      operationId: getLatestBlockNumber
      description: 'This Method returns the latest block number'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Latest block number fetched'
                  data: 19151363
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Latest block number fetched'
                  data:
                    type: integer
                    example: 19151363
      tags:
        - 'BSC Blockchain Queries'
  '/api/v2/bsc/blocks/{block_number}':
    get:
      summary: 'Get block by number or hash'
      operationId: getBlockByNumberOrHash
      description: 'This Method returns the block by its number'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                nullable: true
      tags:
        - 'BSC Blockchain Queries'
    parameters:
      -
        in: path
        name: block_number
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '19151363'
  /api/v2/bsc/transactions:
    get:
      summary: 'List Transactions'
      operationId: listTransactions
      description: "This method lists your transaction history. It lists all transactions including ERC20 and ERC721 transactions. <br>\n Please note that we dont index your addresses. We list only transactions that were made with the Chaingateway API"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Paginated result'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transactions'
                  current_page: 1
                  data:
                    -
                      id: 1
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: default
                      txid: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      contractaddress: null
                      amount: '0.001000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T09:00:18.000000Z'
                      updated_at: '2024-02-13T09:00:18.000000Z'
                    -
                      id: 4
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: default
                      txid: '0x5da4f33531fab8ecfe6f36a1300265f772b5f11c2da736a39b0b4b0c1b97c3e2'
                      from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      contractaddress: null
                      amount: '0.384200000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:01:26.000000Z'
                      updated_at: '2024-02-13T10:01:26.000000Z'
                    -
                      id: 5
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x1b7ecf53527e9a9ec09c448b2f594357e8a09f52c02c96d0de33fe435750d371'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:34:34.000000Z'
                      updated_at: '2024-02-13T10:34:34.000000Z'
                    -
                      id: 6
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x5b293a7289e8405fb8402f0bfa6e7464fdc9bfbc11aaa7874d4a7216b4079729'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:35:57.000000Z'
                      updated_at: '2024-02-13T10:35:57.000000Z'
                    -
                      id: 7
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x8830bd8d0cf0dfeac6d4cc345888ae52f9ca8b3a3cf37859919786bd9cd8ae2f'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '100.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T12:22:03.000000Z'
                      updated_at: '2024-02-13T12:22:03.000000Z'
                    -
                      id: 8
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T12:36:48.000000Z'
                      updated_at: '2024-02-13T12:36:48.000000Z'
                  first_page_url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions'
                  per_page: 50
                  prev_page_url: null
                  to: 6
                  total: 6
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transactions'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: default
                        txid: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                        from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress: null
                        amount: '0.001000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T09:00:18.000000Z'
                        updated_at: '2024-02-13T09:00:18.000000Z'
                      -
                        id: 4
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: default
                        txid: '0x5da4f33531fab8ecfe6f36a1300265f772b5f11c2da736a39b0b4b0c1b97c3e2'
                        from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress: null
                        amount: '0.384200000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:01:26.000000Z'
                        updated_at: '2024-02-13T10:01:26.000000Z'
                      -
                        id: 5
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x1b7ecf53527e9a9ec09c448b2f594357e8a09f52c02c96d0de33fe435750d371'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:34:34.000000Z'
                        updated_at: '2024-02-13T10:34:34.000000Z'
                      -
                        id: 6
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x5b293a7289e8405fb8402f0bfa6e7464fdc9bfbc11aaa7874d4a7216b4079729'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:35:57.000000Z'
                        updated_at: '2024-02-13T10:35:57.000000Z'
                      -
                        id: 7
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x8830bd8d0cf0dfeac6d4cc345888ae52f9ca8b3a3cf37859919786bd9cd8ae2f'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '100.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T12:22:03.000000Z'
                        updated_at: '2024-02-13T12:22:03.000000Z'
                      -
                        id: 8
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T12:36:48.000000Z'
                        updated_at: '2024-02-13T12:36:48.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 1
                        blockchain:
                          type: string
                          example: bsc
                        network:
                          type: string
                          example: testnet
                        type:
                          type: string
                          example: default
                        txid:
                          type: string
                          example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                        from:
                          type: string
                          example: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to:
                          type: string
                          example: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: '0.001000000000'
                        tokenid:
                          type: string
                          example: null
                        responseJson:
                          type: string
                          example: null
                        httpStatus:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2024-02-13T09:00:18.000000Z'
                        updated_at:
                          type: string
                          example: '2024-02-13T09:00:18.000000Z'
                  first_page_url:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions'
                  per_page:
                    type: integer
                    example: 50
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 6
                  total:
                    type: integer
                    example: 6
      tags:
        - 'BSC Transactions'
    post:
      summary: 'Create transaction'
      operationId: createTransaction
      description: 'This method creates a new transaction. <br>'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created'
                  data:
                    adderess: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created'
                  data:
                    type: object
                    properties:
                      adderess:
                        type: string
                        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        401:
          description: 'Wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 401
                  ok: false
                  message: 'Wrong password provided'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 401
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Wrong password provided'
                  errors:
                    type: array
                    example: []
        422:
          description: 'Insufficent funds'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors:
                    type: array
                    example: []
      tags:
        - 'BSC Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                amount:
                  type: string
                  description: 'The amount to send.'
                  example: '1000000000000000000'
                gas:
                  type: integer
                  description: 'The gas limit for the transaction.'
                  example: 21000
                gasprice:
                  type: integer
                  description: 'The gas price for the transaction.'
                  example: 1000000000
                maxPriorityFeePerGas:
                  type: integer
                  description: 'The maximum priority fee per gas for the transaction.'
                  example: 1000000000
                maxFeePerGas:
                  type: integer
                  description: 'The maximum fee per gas for the transaction.'
                  example: 1000000000
                password:
                  type: string
                  description: 'The password for the wallet.'
                  example: password
                data:
                  type: string
                  description: 'The data for the transaction.'
                  example: 0x
                nonce:
                  type: string
                  description: 'The nonce for the transaction.'
                  example: '0'
              required:
                - from
                - to
                - amount
                - password
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter. The page number'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1'
  '/api/v2/bsc/transactions/{txid}':
    get:
      summary: 'Get transaction'
      operationId: getTransaction
      description: 'This method shows a transaction'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Decoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction'
                  data:
                    transaction:
                      blockHash: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                      blockNumber: '37701506'
                      from: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                      gas: '21000'
                      gasPrice: '3.0000000000'
                      hash: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      nonce: '14'
                      to: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      transactionIndex: '8'
                      maxFeePerGas: null
                      maxPriorityFeePerGas: null
                      amount: '0.001000000000000000'
                      contractaddress: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      type: ETH
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          blockHash:
                            type: string
                            example: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                          blockNumber:
                            type: string
                            example: '37701506'
                          from:
                            type: string
                            example: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                          gas:
                            type: string
                            example: '21000'
                          gasPrice:
                            type: string
                            example: '3.0000000000'
                          hash:
                            type: string
                            example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                          nonce:
                            type: string
                            example: '14'
                          to:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          transactionIndex:
                            type: string
                            example: '8'
                          maxFeePerGas:
                            type: string
                            example: null
                          maxPriorityFeePerGas:
                            type: string
                            example: null
                          amount:
                            type: string
                            example: '0.001000000000000000'
                          contractaddress:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          type:
                            type: string
                            example: ETH
        422:
          description: 'Transaction not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'transaction not found'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'transaction not found'
                  errors:
                    type: array
                    example: []
      tags:
        - 'BSC Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  '/api/v2/bsc/transactions/{txid}/decoded':
    get:
      summary: 'Get transaction'
      operationId: getTransaction
      description: 'This method shows a transaction'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Decoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction'
                  data:
                    transaction:
                      blockHash: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                      blockNumber: '37701506'
                      from: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                      gas: '21000'
                      gasPrice: '3.0000000000'
                      hash: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      nonce: '14'
                      to: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      transactionIndex: '8'
                      maxFeePerGas: null
                      maxPriorityFeePerGas: null
                      amount: '0.001000000000000000'
                      contractaddress: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      type: ETH
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          blockHash:
                            type: string
                            example: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                          blockNumber:
                            type: string
                            example: '37701506'
                          from:
                            type: string
                            example: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                          gas:
                            type: string
                            example: '21000'
                          gasPrice:
                            type: string
                            example: '3.0000000000'
                          hash:
                            type: string
                            example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                          nonce:
                            type: string
                            example: '14'
                          to:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          transactionIndex:
                            type: string
                            example: '8'
                          maxFeePerGas:
                            type: string
                            example: null
                          maxPriorityFeePerGas:
                            type: string
                            example: null
                          amount:
                            type: string
                            example: '0.001000000000000000'
                          contractaddress:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          type:
                            type: string
                            example: ETH
        422:
          description: 'Transaction not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'transaction not found'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'transaction not found'
                  errors:
                    type: array
                    example: []
      tags:
        - 'BSC Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  /api/v2/bsc/addresses:
    get:
      summary: 'List addresses'
      operationId: listAddresses
      description: 'Lists all addresses you have created but not yet deleted'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'BSC Addresses'
    post:
      summary: 'Create address'
      operationId: createAddress
      description: "Creates a new address wich can be used to send and receive crypto currencies, ERC20 and ERC721 tokens.\nplease provide a stron password within the request body. You will need the password everytime you interact with your address.\n\n<aside class=\"notice\">We do not store Passowrds! If you lose it, we cannot restore your wallet! </aside>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Address created'
                  data:
                    adderess: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address created'
                  data:
                    type: object
                    properties:
                      adderess:
                        type: string
                        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Your address limit exceeded. Please upgrade your plan'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Your address limit exceeded. Please upgrade your plan'
                  data:
                    type: array
                    example: []
      tags:
        - 'BSC Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: architecto
              required:
                - password
  '/api/v2/bsc/addresses/{address}':
    delete:
      summary: 'Delete address'
      operationId: deleteAddress
      description: 'This method will delete your address. This decreases your used address metrics'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address deleted'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address deleted'
                  data:
                    type: array
                    example: []
      tags:
        - 'BSC Addresses'
    parameters:
      -
        in: path
        name: address
        description: 'The address you want to delete.'
        example: '0xd280406b68901ae4F2431d1830dF5232F49C19fA'
        required: true
        schema:
          type: string
  '/api/v2/bsc/balances/{address}':
    get:
      summary: 'Get balance of an address'
      operationId: getBalanceOfAnAddress
      description: 'Get the balance of an address'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Balance fetched'
                  data: '0.000000000000000000'
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Balance fetched'
                  data:
                    type: string
                    example: '0.000000000000000000'
      tags:
        - 'BSC Blockchain Queries'
    parameters:
      -
        in: path
        name: address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0x0000000000000000000000000000000000001000'
  '/api/v2/bsc/balances/{address}/bep20/{contract_address}':
    get:
      summary: 'Get balance of an BEP20 token'
      operationId: getBalanceOfAnBEP20Token
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: '{ "status": 200, "ok": true, "message": "BEP20 balance fetched", "data": "0.000000" }'
      tags:
        - 'BSC Blockchain Queries'
    parameters:
      -
        in: path
        name: address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0xcd631BbBA7C83804e88121f6ad903073fFC5212c'
      -
        in: path
        name: contract_address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0x8965349fb649A33a30cbFDa057D8eC2C48AbE2A2'
  '/api/v2/bsc/transactions/{txid}/receipt/{decoded}':
    get:
      summary: 'Get receipt'
      operationId: getReceipt
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Encoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction receipt'
                  data:
                    transaction:
                      blockHash: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                      blockNumber: '0x23f4782'
                      contractAddress: null
                      cumulativeGasUsed: '0x993f6'
                      effectiveGasPrice: '0xb2d05e00'
                      from: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                      gasUsed: '0x5208'
                      logs: []
                      logsBloom: '0x
                      status: '0x1'
                      to: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      transactionHash: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      transactionIndex: '0x8'
                      type: '0x0'
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction receipt'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          blockHash:
                            type: string
                            example: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                          blockNumber:
                            type: string
                            example: '0x23f4782'
                          contractAddress:
                            type: string
                            example: null
                          cumulativeGasUsed:
                            type: string
                            example: '0x993f6'
                          effectiveGasPrice:
                            type: string
                            example: '0xb2d05e00'
                          from:
                            type: string
                            example: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                          gasUsed:
                            type: string
                            example: '0x5208'
                          logs:
                            type: array
                            example: []
                          logsBloom:
                            type: string
                            example: '0x
                          status:
                            type: string
                            example: '0x1'
                          to:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          transactionHash:
                            type: string
                            example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                          transactionIndex:
                            type: string
                            example: '0x8'
                          type:
                            type: string
                            example: '0x0'
        422:
          description: 'Transaction receipt not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'transaction not found'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'transaction not found'
                  errors:
                    type: array
                    example: []
      tags:
        - 'BSC Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  /api/v2/bsc/transactions/bep20:
    post:
      summary: 'Create ERC20 transaction'
      operationId: createERC20Transaction
      description: 'This method creates a new ERC20 transaction. <br>'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created'
                  data:
                    adderess: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created'
                  data:
                    type: object
                    properties:
                      adderess:
                        type: string
                        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        401:
          description: 'Wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 401
                  ok: false
                  message: 'Wrong password provided'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 401
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Wrong password provided'
                  errors:
                    type: array
                    example: []
        422:
          description: 'Insufficent funds'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors:
                    type: array
                    example: []
      tags:
        - 'BSC Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                contractaddress:
                  type: string
                  description: 'The address of the ERC20 contract. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                gas:
                  type: integer
                  description: 'The gas limit for the transaction.'
                  example: 21000
                gasprice:
                  type: integer
                  description: 'The gas price for the transaction.'
                  example: 1000000000
                maxPriorityFeePerGas:
                  type: number
                  description: 'The maximum priority fee per gas for the transaction.'
                  example: 1000000000.0
                maxFeePerGas:
                  type: number
                  description: 'The maximum fee per gas for the transaction.'
                  example: 1000000000.0
                password:
                  type: string
                  description: 'The password to unlock the wallet.'
                  example: password123
                data:
                  type: string
                  description: 'The data to send with the transaction.'
                  example: '0x123456'
                nonce:
                  type: string
                  description: 'The nonce for the transaction.'
                  example: '0x123456'
              required:
                - from
                - contractaddress
                - to
                - password
  /api/v2/bsc/transactions/bep721:
    post:
      summary: 'Create ERC721 transaction'
      operationId: createERC721Transaction
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created'
                  data:
                    txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created'
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                        example: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
        401:
          description: 'Wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 401
                  ok: false
                  message: 'Wrong password provided'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 401
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Wrong password provided'
                  errors:
                    type: array
                    example: []
        422:
          description: 'Insufficent funds'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors:
                    type: array
                    example: []
      tags:
        - 'BSC Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                contractaddress:
                  type: string
                  description: 'The address of the ERC721 contract. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                tokenId:
                  type: integer
                  description: 'The token ID to send.'
                  example: 1
                gas:
                  type: integer
                  description: 'The gas limit for the transaction.'
                  example: 21000
                gasprice:
                  type: string
                  description: 'The gas price for the transaction.'
                  example: '1000000000'
                maxPriorityFeePerGas:
                  type: string
                  description: ''
                  example: architecto
                maxFeePerGas:
                  type: string
                  description: ''
                  example: architecto
                password:
                  type: string
                  description: ''
                  example: '|]|{+-'
                data:
                  type: string
                  description: ''
                  example: architecto
                nonce:
                  type: string
                  description: ''
                  example: architecto
              required:
                - from
                - contractaddress
                - to
                - tokenId
                - gas
                - password
  '/api/v2/bsc/bep20/{contract_address}':
    get:
      summary: 'Get BEP20 contract information'
      operationId: getBEP20ContractInformation
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  data: data
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: string
                    example: data
      tags:
        - 'BSC Blockchain Queries'
    parameters:
      -
        in: path
        name: contract_address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0x8965349fb649A33a30cbFDa057D8eC2C48AbE2A2'
  /api/v2/bsc/addresses/import:
    post:
      summary: 'Import address'
      operationId: importAddress
      description: 'This method will import a keystore file. Please note that it can take up to a minute before you will be able to use the keystore file!'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address exportet'
                  data:
                    filename: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                    content:
                      address: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      crypto:
                        cipher: aes-128-ctr
                        ciphertext: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                        cipherparams:
                          iv: fa0b928e27c18699f49398c723e05578
                        kdf: scrypt
                        kdfparams:
                          dklen: 32
                          'n': 262144
                          p: 1
                          r: 8
                          salt: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                        mac: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                      id: 6c6cb213-e208-43af-8cc4-5e428636bf47
                      version: 3
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address exportet'
                  data:
                    type: object
                    properties:
                      filename:
                        type: string
                        example: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      content:
                        type: object
                        properties:
                          address:
                            type: string
                            example: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                          crypto:
                            type: object
                            properties:
                              cipher:
                                type: string
                                example: aes-128-ctr
                              ciphertext:
                                type: string
                                example: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                              cipherparams:
                                type: object
                                properties:
                                  iv:
                                    type: string
                                    example: fa0b928e27c18699f49398c723e05578
                              kdf:
                                type: string
                                example: scrypt
                              kdfparams:
                                type: object
                                properties:
                                  dklen:
                                    type: integer
                                    example: 32
                                  'n':
                                    type: integer
                                    example: 262144
                                  p:
                                    type: integer
                                    example: 1
                                  r:
                                    type: integer
                                    example: 8
                                  salt:
                                    type: string
                                    example: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                              mac:
                                type: string
                                example: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                          id:
                            type: string
                            example: 6c6cb213-e208-43af-8cc4-5e428636bf47
                          version:
                            type: integer
                            example: 3
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    password:
                      - 'The password field is required.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - 'BSC Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: ''
                  example: architecto
                filename:
                  type: string
                  description: ''
                  example: architecto
                password:
                  type: string
                  description: ''
                  example: architecto
              required:
                - content
                - filename
                - password
  '/api/v2/bsc/addresses/export/{address}':
    post:
      summary: 'Export address'
      operationId: exportAddress
      description: 'This method will export the keystore file and filename.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address exportet'
                  data:
                    filename: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                    content:
                      address: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      crypto:
                        cipher: aes-128-ctr
                        ciphertext: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                        cipherparams:
                          iv: fa0b928e27c18699f49398c723e05578
                        kdf: scrypt
                        kdfparams:
                          dklen: 32
                          'n': 262144
                          p: 1
                          r: 8
                          salt: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                        mac: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                      id: 6c6cb213-e208-43af-8cc4-5e428636bf47
                      version: 3
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address exportet'
                  data:
                    type: object
                    properties:
                      filename:
                        type: string
                        example: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      content:
                        type: object
                        properties:
                          address:
                            type: string
                            example: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                          crypto:
                            type: object
                            properties:
                              cipher:
                                type: string
                                example: aes-128-ctr
                              ciphertext:
                                type: string
                                example: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                              cipherparams:
                                type: object
                                properties:
                                  iv:
                                    type: string
                                    example: fa0b928e27c18699f49398c723e05578
                              kdf:
                                type: string
                                example: scrypt
                              kdfparams:
                                type: object
                                properties:
                                  dklen:
                                    type: integer
                                    example: 32
                                  'n':
                                    type: integer
                                    example: 262144
                                  p:
                                    type: integer
                                    example: 1
                                  r:
                                    type: integer
                                    example: 8
                                  salt:
                                    type: string
                                    example: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                              mac:
                                type: string
                                example: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                          id:
                            type: string
                            example: 6c6cb213-e208-43af-8cc4-5e428636bf47
                          version:
                            type: integer
                            example: 3
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    password:
                      - 'The password field is required.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - 'BSC Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: architecto
              required:
                - password
    parameters:
      -
        in: path
        name: address
        description: 'The address you want to export.'
        example: '0xd280406b68901ae4F2431d1830dF5232F49C19fA'
        required: true
        schema:
          type: string
  /api/v2/bsc/gasprice:
    get:
      summary: ''
      operationId: getApiV2BscGasprice
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Gas price fetched'
          content:
            application/json:
              schema:
                type: object
                example:
                  ok: true
                  status: 200
                  message: 'Successfully parsed'
                  data:
                    gasPrice: '12.28'
                properties:
                  ok:
                    type: boolean
                    example: true
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully parsed'
                  data:
                    type: object
                    properties:
                      gasPrice:
                        type: string
                        example: '12.28'
      tags:
        - 'BSC Blockchain Queries'
  '/api/v2/bsc/nfts/{contract_address}/owner/{token_id}':
    get:
      summary: ''
      operationId: getApiV2BscNftsContract_addressOwnerToken_id
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'BSC Blockchain Queries'
    parameters:
      -
        in: path
        name: contract_address
        description: 'The contract address'
        example: '0x5e032243d507c743b061ef021e2ec7fcc6d3ab89'
        required: true
        schema:
          type: string
      -
        in: path
        name: token_id
        description: 'The token id'
        example: '1234'
        required: true
        schema:
          type: string
  '/api/v2/bsc/nfts/{contract_address}/uri/{token_id}':
    get:
      summary: ''
      operationId: getApiV2BscNftsContract_addressUriToken_id
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'BSC Blockchain Queries'
    parameters:
      -
        in: path
        name: contract_address
        description: 'The contract address'
        example: '0x5e032243d507c743b061ef021e2ec7fcc6d3ab89'
        required: true
        schema:
          type: string
      -
        in: path
        name: token_id
        description: 'The token id'
        example: '1234'
        required: true
        schema:
          type: string
  /api/v2/bsc/webhooks:
    get:
      summary: 'Get all webhooks'
      operationId: getAllWebhooks
      description: 'Lists all webhooks created by the user.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'BSC Webhooks'
    post:
      summary: 'Create webhook'
      operationId: createWebhook
      description: 'Creates a new webhook for real-time communication and event notification.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Webhook created'
                  data:
                    webhook: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook created'
                  data:
                    type: object
                    properties:
                      webhook:
                        type: string
                        example: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    status: 422
                    ok: false
                    message: 'Data validation failed'
                    errors:
                      from:
                        - 'The from field format is invalid.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      status:
                        type: integer
                        example: 422
                      ok:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: 'Data validation failed'
                      errors:
                        type: object
                        properties:
                          from:
                            type: array
                            example:
                              - 'The from field format is invalid.'
                            items:
                              type: string
      tags:
        - 'BSC Webhooks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'Sender address (required if not "to"). This field is required when <code>to</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                to:
                  type: string
                  description: 'Receiver address (required if not providing "from"). This field is required when <code>from</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                url:
                  type: string
                  description: 'URL for webhook notifications (required). Must be a valid URL.'
                  example: 'http://vonrueden.com/'
                contractaddress:
                  type: string
                  description: 'The Address of an Contract you want to track (Not allowwed on Bitcoin). This field is required when none of <code>from</code> and <code>to</code> are present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                token_id:
                  type: string
                  description: 'This field is required when none of <code>from</code> and <code>to</code> are present.'
                  example: null
                type:
                  type: string
                  description: ''
                  example: BEP20
                  enum:
                    - BNB
                    - BEP20
                    - BEP721
              required:
                - url
  '/api/v2/bsc/webhooks/{id}':
    get:
      summary: 'Get webhook'
      operationId: getWebhook
      description: 'Show the details of a Webhook'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'BSC Webhooks'
    put:
      summary: 'Update webhook'
      operationId: updateWebhook
      description: 'Updates an existing webhook with the provided data.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Webhook updated'
                  data:
                    id: 9b73d6ee-8a8b-44c3-b2c6-0bd1e1d8cd9a
                    from: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    to: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    contractaddress: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    type: BEP20
                    token_id: null
                    url: 'http://blanda.com/debitis-et-id-nisi-qui-id.html'
                    is_active: true
                    is_invalid: false
                    old_id: null
                    created_at: '2024-02-29T14:51:35.000000Z'
                    updated_at: '2024-02-29T14:52:33.000000Z'
                    deleted_at: null
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook updated'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9b73d6ee-8a8b-44c3-b2c6-0bd1e1d8cd9a
                      from:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      to:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      contractaddress:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      type:
                        type: string
                        example: BEP20
                      token_id:
                        type: string
                        example: null
                      url:
                        type: string
                        example: 'http://blanda.com/debitis-et-id-nisi-qui-id.html'
                      is_active:
                        type: boolean
                        example: true
                      is_invalid:
                        type: boolean
                        example: false
                      old_id:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2024-02-29T14:51:35.000000Z'
                      updated_at:
                        type: string
                        example: '2024-02-29T14:52:33.000000Z'
                      deleted_at:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 404
                  ok: false
                  message: 'Webhook not found'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 404
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Webhook not found'
                  data:
                    type: array
                    example: []
      tags:
        - 'BSC Webhooks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'Sender address (required if not "to"). This field is required when <code>to</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                to:
                  type: string
                  description: 'Receiver address (required if not providing "from"). This field is required when <code>from</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                url:
                  type: string
                  description: 'URL for webhook notifications (required). Must be a valid URL.'
                  example: 'http://vonrueden.com/'
                contractaddress:
                  type: string
                  description: 'The Address of an Contract you want to track (Not allowwed on Bitcoin). This field is required when none of <code>from</code> and <code>to</code> are present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                token_id:
                  type: string
                  description: 'This field is required when none of <code>from</code> and <code>to</code> are present.'
                  example: null
                type:
                  type: string
                  description: ''
                  example: BEP20
                  enum:
                    - BNB
                    - BEP20
                    - BEP721
              required:
                - url
    delete:
      summary: 'Delete webhook'
      operationId: deleteWebhook
      description: 'This method will delete the specified webhook.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Webhook deleted'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook deleted'
                  data:
                    type: array
                    example: []
      tags:
        - 'BSC Webhooks'
    parameters:
      -
        in: path
        name: id
        description: 'The UUID of the webhook you want to show.'
        example: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
        required: true
        schema:
          type: string
  /api/v2/bsc/webhooks/notifications:
    get:
      summary: 'Display all Webhook Notifications'
      operationId: displayAllWebhookNotifications
      description: 'Lists all webhook notifications created by the user for the specific  Blockchain and Network'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Successfully fetched notifications'
                  current_page: 1
                  data:
                    -
                      id: 9ba28088-81d8-4aab-b711-650525081fe1
                      webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                      txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                      type: TRC20
                      contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                      from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                      to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                      tokenid: null
                      amount: null
                      blocknumber: '19499380'
                      status: failed
                      url: 'https://example.com'
                      success: false
                      attempts: 0
                      created_at: '2024-05-05T19:33:52.000000Z'
                      updated_at: '2024-05-05T19:33:54.000000Z'
                      network: testnet
                      blockchain: tron
                      response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully fetched notifications'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type: TRC20
                        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid: null
                        amount: null
                        blocknumber: '19499380'
                        status: failed
                        url: 'https://example.com'
                        success: false
                        attempts: 0
                        created_at: '2024-05-05T19:33:52.000000Z'
                        updated_at: '2024-05-05T19:33:54.000000Z'
                        network: testnet
                        blockchain: tron
                        response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id:
                          type: string
                          example: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid:
                          type: string
                          example: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type:
                          type: string
                          example: TRC20
                        contractaddress:
                          type: string
                          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from:
                          type: string
                          example: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to:
                          type: string
                          example: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: null
                        blocknumber:
                          type: string
                          example: '19499380'
                        status:
                          type: string
                          example: failed
                        url:
                          type: string
                          example: 'https://example.com'
                        success:
                          type: boolean
                          example: false
                        attempts:
                          type: integer
                          example: 0
                        created_at:
                          type: string
                          example: '2024-05-05T19:33:52.000000Z'
                        updated_at:
                          type: string
                          example: '2024-05-05T19:33:54.000000Z'
                        network:
                          type: string
                          example: testnet
                        blockchain:
                          type: string
                          example: tron
                        response:
                          type: string
                          example: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'BSC Webhooks'
  /api/v2/bsc/webhooks/notifications/failed:
    get:
      summary: 'Display all failed Webhook Notification'
      operationId: displayAllFailedWebhookNotification
      description: "Lists all failed webhook notifications created by the user for the specific  Blockchain and Network\nBased on the response you can use our /webhooks/notifications/{id}/retry to retry every failed webhook.\n\nAfter you started the retry process, the webhook will be removed from this list. should the retry process fail, the webhook will be added back to this list."
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Successfully fetched failed notifications'
                  current_page: 1
                  data:
                    -
                      id: 9ba28088-81d8-4aab-b711-650525081fe1
                      webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                      txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                      type: TRC20
                      contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                      from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                      to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                      tokenid: null
                      amount: null
                      blocknumber: '19499380'
                      status: failed
                      url: 'https://example.com'
                      success: false
                      attempts: 0
                      created_at: '2024-05-05T19:33:52.000000Z'
                      updated_at: '2024-05-05T19:33:54.000000Z'
                      network: testnet
                      blockchain: tron
                      response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully fetched failed notifications'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type: TRC20
                        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid: null
                        amount: null
                        blocknumber: '19499380'
                        status: failed
                        url: 'https://example.com'
                        success: false
                        attempts: 0
                        created_at: '2024-05-05T19:33:52.000000Z'
                        updated_at: '2024-05-05T19:33:54.000000Z'
                        network: testnet
                        blockchain: tron
                        response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id:
                          type: string
                          example: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid:
                          type: string
                          example: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type:
                          type: string
                          example: TRC20
                        contractaddress:
                          type: string
                          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from:
                          type: string
                          example: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to:
                          type: string
                          example: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: null
                        blocknumber:
                          type: string
                          example: '19499380'
                        status:
                          type: string
                          example: failed
                        url:
                          type: string
                          example: 'https://example.com'
                        success:
                          type: boolean
                          example: false
                        attempts:
                          type: integer
                          example: 0
                        created_at:
                          type: string
                          example: '2024-05-05T19:33:52.000000Z'
                        updated_at:
                          type: string
                          example: '2024-05-05T19:33:54.000000Z'
                        network:
                          type: string
                          example: testnet
                        blockchain:
                          type: string
                          example: tron
                        response:
                          type: string
                          example: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'BSC Webhooks'
  '/api/v2/bsc/webhooks/notifications/{id}/retry':
    post:
      summary: 'Retry a failed Webhook Notification'
      operationId: retryAFailedWebhookNotification
      description: 'Retries a failed webhook notification'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses: {  }
      tags:
        - 'BSC Webhooks'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v2/polygon/blocks/number:
    get:
      summary: 'Get latest block number'
      operationId: getLatestBlockNumber
      description: 'This Method returns the latest block number'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Latest block number fetched'
                  data: 19151363
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Latest block number fetched'
                  data:
                    type: integer
                    example: 19151363
      tags:
        - 'Polygon Blockchain Queries'
  '/api/v2/polygon/blocks/{block_number}':
    get:
      summary: 'Get block by number or hash'
      operationId: getBlockByNumberOrHash
      description: 'This Method returns the block by its number'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                nullable: true
      tags:
        - 'Polygon Blockchain Queries'
    parameters:
      -
        in: path
        name: block_number
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '19151363'
  /api/v2/polygon/transactions:
    get:
      summary: 'List Transactions'
      operationId: listTransactions
      description: "This method lists your transaction history. It lists all transactions including ERC20 and ERC721 transactions. <br>\n Please note that we dont index your addresses. We list only transactions that were made with the Chaingateway API"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Paginated result'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transactions'
                  current_page: 1
                  data:
                    -
                      id: 1
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: default
                      txid: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      contractaddress: null
                      amount: '0.001000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T09:00:18.000000Z'
                      updated_at: '2024-02-13T09:00:18.000000Z'
                    -
                      id: 4
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: default
                      txid: '0x5da4f33531fab8ecfe6f36a1300265f772b5f11c2da736a39b0b4b0c1b97c3e2'
                      from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      contractaddress: null
                      amount: '0.384200000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:01:26.000000Z'
                      updated_at: '2024-02-13T10:01:26.000000Z'
                    -
                      id: 5
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x1b7ecf53527e9a9ec09c448b2f594357e8a09f52c02c96d0de33fe435750d371'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:34:34.000000Z'
                      updated_at: '2024-02-13T10:34:34.000000Z'
                    -
                      id: 6
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x5b293a7289e8405fb8402f0bfa6e7464fdc9bfbc11aaa7874d4a7216b4079729'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T10:35:57.000000Z'
                      updated_at: '2024-02-13T10:35:57.000000Z'
                    -
                      id: 7
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x8830bd8d0cf0dfeac6d4cc345888ae52f9ca8b3a3cf37859919786bd9cd8ae2f'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '100.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T12:22:03.000000Z'
                      updated_at: '2024-02-13T12:22:03.000000Z'
                    -
                      id: 8
                      user_id: 1
                      blockchain: bsc
                      network: testnet
                      type: ERC20
                      txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                      from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                      to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                      contractaddress: null
                      amount: '1.000000000000'
                      tokenid: null
                      responseJson: null
                      httpStatus: null
                      created_at: '2024-02-13T12:36:48.000000Z'
                      updated_at: '2024-02-13T12:36:48.000000Z'
                  first_page_url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions'
                  per_page: 50
                  prev_page_url: null
                  to: 6
                  total: 6
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transactions'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: default
                        txid: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                        from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress: null
                        amount: '0.001000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T09:00:18.000000Z'
                        updated_at: '2024-02-13T09:00:18.000000Z'
                      -
                        id: 4
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: default
                        txid: '0x5da4f33531fab8ecfe6f36a1300265f772b5f11c2da736a39b0b4b0c1b97c3e2'
                        from: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress: null
                        amount: '0.384200000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:01:26.000000Z'
                        updated_at: '2024-02-13T10:01:26.000000Z'
                      -
                        id: 5
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x1b7ecf53527e9a9ec09c448b2f594357e8a09f52c02c96d0de33fe435750d371'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:34:34.000000Z'
                        updated_at: '2024-02-13T10:34:34.000000Z'
                      -
                        id: 6
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x5b293a7289e8405fb8402f0bfa6e7464fdc9bfbc11aaa7874d4a7216b4079729'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T10:35:57.000000Z'
                        updated_at: '2024-02-13T10:35:57.000000Z'
                      -
                        id: 7
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x8830bd8d0cf0dfeac6d4cc345888ae52f9ca8b3a3cf37859919786bd9cd8ae2f'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '100.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T12:22:03.000000Z'
                        updated_at: '2024-02-13T12:22:03.000000Z'
                      -
                        id: 8
                        user_id: 1
                        blockchain: bsc
                        network: testnet
                        type: ERC20
                        txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                        from: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        to: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        contractaddress: null
                        amount: '1.000000000000'
                        tokenid: null
                        responseJson: null
                        httpStatus: null
                        created_at: '2024-02-13T12:36:48.000000Z'
                        updated_at: '2024-02-13T12:36:48.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 1
                        blockchain:
                          type: string
                          example: bsc
                        network:
                          type: string
                          example: testnet
                        type:
                          type: string
                          example: default
                        txid:
                          type: string
                          example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                        from:
                          type: string
                          example: '0x261a8dE315f34b8e35B225e70159Dc612B3793dB'
                        to:
                          type: string
                          example: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
                        contractaddress:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: '0.001000000000'
                        tokenid:
                          type: string
                          example: null
                        responseJson:
                          type: string
                          example: null
                        httpStatus:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2024-02-13T09:00:18.000000Z'
                        updated_at:
                          type: string
                          example: '2024-02-13T09:00:18.000000Z'
                  first_page_url:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bsc/transactions'
                  per_page:
                    type: integer
                    example: 50
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 6
                  total:
                    type: integer
                    example: 6
      tags:
        - 'Polygon Transactions'
    post:
      summary: 'Create transaction'
      operationId: createTransaction
      description: 'This method creates a new transaction. <br>'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created'
                  data:
                    adderess: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created'
                  data:
                    type: object
                    properties:
                      adderess:
                        type: string
                        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        401:
          description: 'Wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 401
                  ok: false
                  message: 'Wrong password provided'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 401
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Wrong password provided'
                  errors:
                    type: array
                    example: []
        422:
          description: 'Insufficent funds'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Polygon Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                amount:
                  type: string
                  description: 'The amount to send.'
                  example: '1000000000000000000'
                gas:
                  type: integer
                  description: 'The gas limit for the transaction.'
                  example: 21000
                gasprice:
                  type: integer
                  description: 'The gas price for the transaction.'
                  example: 1000000000
                maxPriorityFeePerGas:
                  type: integer
                  description: 'The maximum priority fee per gas for the transaction.'
                  example: 1000000000
                maxFeePerGas:
                  type: integer
                  description: 'The maximum fee per gas for the transaction.'
                  example: 1000000000
                password:
                  type: string
                  description: 'The password for the wallet.'
                  example: password
                data:
                  type: string
                  description: 'The data for the transaction.'
                  example: 0x
                nonce:
                  type: string
                  description: 'The nonce for the transaction.'
                  example: '0'
              required:
                - from
                - to
                - amount
                - password
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter. The page number'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '1'
  '/api/v2/polygon/transactions/{txid}':
    get:
      summary: 'Get transaction'
      operationId: getTransaction
      description: 'This method shows a transaction'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Decoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction'
                  data:
                    transaction:
                      blockHash: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                      blockNumber: '37701506'
                      from: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                      gas: '21000'
                      gasPrice: '3.0000000000'
                      hash: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      nonce: '14'
                      to: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      transactionIndex: '8'
                      maxFeePerGas: null
                      maxPriorityFeePerGas: null
                      amount: '0.001000000000000000'
                      contractaddress: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      type: ETH
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          blockHash:
                            type: string
                            example: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                          blockNumber:
                            type: string
                            example: '37701506'
                          from:
                            type: string
                            example: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                          gas:
                            type: string
                            example: '21000'
                          gasPrice:
                            type: string
                            example: '3.0000000000'
                          hash:
                            type: string
                            example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                          nonce:
                            type: string
                            example: '14'
                          to:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          transactionIndex:
                            type: string
                            example: '8'
                          maxFeePerGas:
                            type: string
                            example: null
                          maxPriorityFeePerGas:
                            type: string
                            example: null
                          amount:
                            type: string
                            example: '0.001000000000000000'
                          contractaddress:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          type:
                            type: string
                            example: ETH
        422:
          description: 'Transaction not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'transaction not found'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'transaction not found'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Polygon Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  '/api/v2/polygon/transactions/{txid}/decoded':
    get:
      summary: 'Get transaction'
      operationId: getTransaction
      description: 'This method shows a transaction'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Decoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction'
                  data:
                    transaction:
                      blockHash: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                      blockNumber: '37701506'
                      from: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                      gas: '21000'
                      gasPrice: '3.0000000000'
                      hash: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      nonce: '14'
                      to: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      transactionIndex: '8'
                      maxFeePerGas: null
                      maxPriorityFeePerGas: null
                      amount: '0.001000000000000000'
                      contractaddress: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      type: ETH
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          blockHash:
                            type: string
                            example: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                          blockNumber:
                            type: string
                            example: '37701506'
                          from:
                            type: string
                            example: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                          gas:
                            type: string
                            example: '21000'
                          gasPrice:
                            type: string
                            example: '3.0000000000'
                          hash:
                            type: string
                            example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                          nonce:
                            type: string
                            example: '14'
                          to:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          transactionIndex:
                            type: string
                            example: '8'
                          maxFeePerGas:
                            type: string
                            example: null
                          maxPriorityFeePerGas:
                            type: string
                            example: null
                          amount:
                            type: string
                            example: '0.001000000000000000'
                          contractaddress:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          type:
                            type: string
                            example: ETH
        422:
          description: 'Transaction not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'transaction not found'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'transaction not found'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Polygon Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  /api/v2/polygon/addresses:
    get:
      summary: 'List addresses'
      operationId: listAddresses
      description: 'Lists all addresses you have created but not yet deleted'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Polygon Addresses'
    post:
      summary: 'Create address'
      operationId: createAddress
      description: "Creates a new address wich can be used to send and receive crypto currencies, ERC20 and ERC721 tokens.\nplease provide a stron password within the request body. You will need the password everytime you interact with your address.\n\n<aside class=\"notice\">We do not store Passowrds! If you lose it, we cannot restore your wallet! </aside>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Address created'
                  data:
                    adderess: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address created'
                  data:
                    type: object
                    properties:
                      adderess:
                        type: string
                        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Your address limit exceeded. Please upgrade your plan'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Your address limit exceeded. Please upgrade your plan'
                  data:
                    type: array
                    example: []
      tags:
        - 'Polygon Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: architecto
              required:
                - password
  '/api/v2/polygon/addresses/{address}':
    delete:
      summary: 'Delete address'
      operationId: deleteAddress
      description: 'This method will delete your address. This decreases your used address metrics'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address deleted'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address deleted'
                  data:
                    type: array
                    example: []
      tags:
        - 'Polygon Addresses'
    parameters:
      -
        in: path
        name: address
        description: 'The address you want to delete.'
        example: '0xd280406b68901ae4F2431d1830dF5232F49C19fA'
        required: true
        schema:
          type: string
  '/api/v2/polygon/balances/{address}':
    get:
      summary: 'Get balance of an address'
      operationId: getBalanceOfAnAddress
      description: 'Get the balance of an address'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Balance fetched'
                  data: '0.000000000000000000'
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Balance fetched'
                  data:
                    type: string
                    example: '0.000000000000000000'
      tags:
        - 'Polygon Blockchain Queries'
    parameters:
      -
        in: path
        name: address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0x45cC557f9E473B1fbB2538aBfd2F27a4C9195acC'
  '/api/v2/polygon/balances/{address}/erc20/{contract_address}':
    get:
      summary: 'Get balance of an ERC20 token'
      operationId: getBalanceOfAnERC20Token
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: '{ "status": 200, "ok": true, "message": "ERC20 balance fetched", "data": "0.000000" }'
      tags:
        - 'Polygon Blockchain Queries'
    parameters:
      -
        in: path
        name: address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0x45cC557f9E473B1fbB2538aBfd2F27a4C9195acC'
      -
        in: path
        name: contract_address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0xc2132D05D31c914a87C6611C10748AEb04B58e8F'
  '/api/v2/polygon/transactions/{txid}/receipt/{decoded}':
    get:
      summary: 'Get receipt'
      operationId: getReceipt
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Encoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction receipt'
                  data:
                    transaction:
                      blockHash: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                      blockNumber: '0x23f4782'
                      contractAddress: null
                      cumulativeGasUsed: '0x993f6'
                      effectiveGasPrice: '0xb2d05e00'
                      from: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                      gasUsed: '0x5208'
                      logs: []
                      logsBloom: '0x
                      status: '0x1'
                      to: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                      transactionHash: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                      transactionIndex: '0x8'
                      type: '0x0'
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction receipt'
                  data:
                    type: object
                    properties:
                      transaction:
                        type: object
                        properties:
                          blockHash:
                            type: string
                            example: '0xf062efe5e23fbd70c05834c8ae6a329d02e8afb1673a8665906945dae74f86e6'
                          blockNumber:
                            type: string
                            example: '0x23f4782'
                          contractAddress:
                            type: string
                            example: null
                          cumulativeGasUsed:
                            type: string
                            example: '0x993f6'
                          effectiveGasPrice:
                            type: string
                            example: '0xb2d05e00'
                          from:
                            type: string
                            example: '0x261a8de315f34b8e35b225e70159dc612b3793db'
                          gasUsed:
                            type: string
                            example: '0x5208'
                          logs:
                            type: array
                            example: []
                          logsBloom:
                            type: string
                            example: '0x
                          status:
                            type: string
                            example: '0x1'
                          to:
                            type: string
                            example: '0xbea640f2bb84082df3bfa459774c4a5b496ca054'
                          transactionHash:
                            type: string
                            example: '0xf5ed14c69911b1f15fa19946e7572486ec01d6fd40c3044753924798bc88d72b'
                          transactionIndex:
                            type: string
                            example: '0x8'
                          type:
                            type: string
                            example: '0x0'
        422:
          description: 'Transaction receipt not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'transaction not found'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'transaction not found'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Polygon Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction hash'
        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: "Optional parameter. If set to 'decoded' it will return the decoded transaction"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: decoded
  /api/v2/polygon/transactions/erc20:
    post:
      summary: 'Create ERC20 transaction'
      operationId: createERC20Transaction
      description: 'This method creates a new ERC20 transaction. <br>'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created'
                  data:
                    adderess: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created'
                  data:
                    type: object
                    properties:
                      adderess:
                        type: string
                        example: '0x7d3bC832A0860fD882FF4C2359e10268f4E5CCf8'
        401:
          description: 'Wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 401
                  ok: false
                  message: 'Wrong password provided'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 401
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Wrong password provided'
                  errors:
                    type: array
                    example: []
        422:
          description: 'Insufficent funds'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Polygon Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                contractaddress:
                  type: string
                  description: 'The address of the ERC20 contract. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                gas:
                  type: integer
                  description: 'The gas limit for the transaction.'
                  example: 21000
                gasprice:
                  type: integer
                  description: 'The gas price for the transaction.'
                  example: 1000000000
                maxPriorityFeePerGas:
                  type: number
                  description: 'The maximum priority fee per gas for the transaction.'
                  example: 1000000000.0
                maxFeePerGas:
                  type: number
                  description: 'The maximum fee per gas for the transaction.'
                  example: 1000000000.0
                password:
                  type: string
                  description: 'The password to unlock the wallet.'
                  example: password123
                data:
                  type: string
                  description: 'The data to send with the transaction.'
                  example: '0x123456'
                nonce:
                  type: string
                  description: 'The nonce for the transaction.'
                  example: '0x123456'
              required:
                - from
                - contractaddress
                - to
                - password
  /api/v2/polygon/transactions/erc721:
    post:
      summary: 'Create ERC721 transaction'
      operationId: createERC721Transaction
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Succesfully created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created'
                  data:
                    txid: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created'
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                        example: '0x73344d178812d4919e9002c560781f288030edf72ece88823ef1c377dfb71f27'
        401:
          description: 'Wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 401
                  ok: false
                  message: 'Wrong password provided'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 401
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Wrong password provided'
                  errors:
                    type: array
                    example: []
        422:
          description: 'Insufficent funds'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'insufficient funds for gas * price + value: balance 2000000000000, tx cost 195000000000000, overshot 193000000000000'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Polygon Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'The address to send the transaction from. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                contractaddress:
                  type: string
                  description: 'The address of the ERC721 contract. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^(0x)?[0-9a-f]{40}$/i.'
                  example: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2'
                tokenId:
                  type: integer
                  description: 'The token ID to send.'
                  example: 1
                gas:
                  type: integer
                  description: 'The gas limit for the transaction.'
                  example: 21000
                gasprice:
                  type: string
                  description: 'The gas price for the transaction.'
                  example: '1000000000'
                maxPriorityFeePerGas:
                  type: string
                  description: ''
                  example: architecto
                maxFeePerGas:
                  type: string
                  description: ''
                  example: architecto
                password:
                  type: string
                  description: ''
                  example: '|]|{+-'
                data:
                  type: string
                  description: ''
                  example: architecto
                nonce:
                  type: string
                  description: ''
                  example: architecto
              required:
                - from
                - contractaddress
                - to
                - tokenId
                - gas
                - password
  '/api/v2/polygon/erc20/{contract_address}':
    get:
      summary: 'Get ERC20 contract information'
      operationId: getERC20ContractInformation
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  data: data
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: string
                    example: data
      tags:
        - 'Polygon Blockchain Queries'
    parameters:
      -
        in: path
        name: contract_address
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '0xc2132D05D31c914a87C6611C10748AEb04B58e8F'
  /api/v2/polygon/addresses/import:
    post:
      summary: 'Import address'
      operationId: importAddress
      description: 'This method will import a keystore file. Please note that it can take up to a minute before you will be able to use the keystore file!'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address exportet'
                  data:
                    filename: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                    content:
                      address: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      crypto:
                        cipher: aes-128-ctr
                        ciphertext: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                        cipherparams:
                          iv: fa0b928e27c18699f49398c723e05578
                        kdf: scrypt
                        kdfparams:
                          dklen: 32
                          'n': 262144
                          p: 1
                          r: 8
                          salt: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                        mac: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                      id: 6c6cb213-e208-43af-8cc4-5e428636bf47
                      version: 3
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address exportet'
                  data:
                    type: object
                    properties:
                      filename:
                        type: string
                        example: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      content:
                        type: object
                        properties:
                          address:
                            type: string
                            example: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                          crypto:
                            type: object
                            properties:
                              cipher:
                                type: string
                                example: aes-128-ctr
                              ciphertext:
                                type: string
                                example: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                              cipherparams:
                                type: object
                                properties:
                                  iv:
                                    type: string
                                    example: fa0b928e27c18699f49398c723e05578
                              kdf:
                                type: string
                                example: scrypt
                              kdfparams:
                                type: object
                                properties:
                                  dklen:
                                    type: integer
                                    example: 32
                                  'n':
                                    type: integer
                                    example: 262144
                                  p:
                                    type: integer
                                    example: 1
                                  r:
                                    type: integer
                                    example: 8
                                  salt:
                                    type: string
                                    example: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                              mac:
                                type: string
                                example: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                          id:
                            type: string
                            example: 6c6cb213-e208-43af-8cc4-5e428636bf47
                          version:
                            type: integer
                            example: 3
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    password:
                      - 'The password field is required.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - 'Polygon Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: ''
                  example: architecto
                filename:
                  type: string
                  description: ''
                  example: architecto
                password:
                  type: string
                  description: ''
                  example: architecto
              required:
                - content
                - filename
                - password
  '/api/v2/polygon/addresses/export/{address}':
    post:
      summary: 'Export address'
      operationId: exportAddress
      description: 'This method will export the keystore file and filename.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address exportet'
                  data:
                    filename: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                    content:
                      address: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      crypto:
                        cipher: aes-128-ctr
                        ciphertext: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                        cipherparams:
                          iv: fa0b928e27c18699f49398c723e05578
                        kdf: scrypt
                        kdfparams:
                          dklen: 32
                          'n': 262144
                          p: 1
                          r: 8
                          salt: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                        mac: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                      id: 6c6cb213-e208-43af-8cc4-5e428636bf47
                      version: 3
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address exportet'
                  data:
                    type: object
                    properties:
                      filename:
                        type: string
                        example: UTC--2022-12-26T12-55-48.128000860Z--bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                      content:
                        type: object
                        properties:
                          address:
                            type: string
                            example: bedd8c2ffbe3dea6fd4b8fd7dcfada3f9fbbc9de
                          crypto:
                            type: object
                            properties:
                              cipher:
                                type: string
                                example: aes-128-ctr
                              ciphertext:
                                type: string
                                example: fe7116256d5614454ad1c6a91bb59ffb5134c7f422af756c4a91c7befb76ec23
                              cipherparams:
                                type: object
                                properties:
                                  iv:
                                    type: string
                                    example: fa0b928e27c18699f49398c723e05578
                              kdf:
                                type: string
                                example: scrypt
                              kdfparams:
                                type: object
                                properties:
                                  dklen:
                                    type: integer
                                    example: 32
                                  'n':
                                    type: integer
                                    example: 262144
                                  p:
                                    type: integer
                                    example: 1
                                  r:
                                    type: integer
                                    example: 8
                                  salt:
                                    type: string
                                    example: 4caf1321445a405cd66b734f0a49eddbf4efb6bb0c65dd41733ae1addebf6171
                              mac:
                                type: string
                                example: 775bf996eefd6e1c9ab39533ef12a5516839ed5c7742aa3c6f1130abf77561af
                          id:
                            type: string
                            example: 6c6cb213-e208-43af-8cc4-5e428636bf47
                          version:
                            type: integer
                            example: 3
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    password:
                      - 'The password field is required.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - 'Polygon Addresses'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: architecto
              required:
                - password
    parameters:
      -
        in: path
        name: address
        description: 'The address you want to export.'
        example: '0xd280406b68901ae4F2431d1830dF5232F49C19fA'
        required: true
        schema:
          type: string
  /api/v2/polygon/gasprice:
    get:
      summary: ''
      operationId: getApiV2PolygonGasprice
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Gas price fetched'
          content:
            application/json:
              schema:
                type: object
                example:
                  ok: true
                  status: 200
                  message: 'Successfully parsed'
                  data:
                    gasPrice: '12.28'
                properties:
                  ok:
                    type: boolean
                    example: true
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully parsed'
                  data:
                    type: object
                    properties:
                      gasPrice:
                        type: string
                        example: '12.28'
      tags:
        - 'Polygon Blockchain Queries'
  '/api/v2/polygon/nfts/{contract_address}/owner/{token_id}':
    get:
      summary: ''
      operationId: getApiV2PolygonNftsContract_addressOwnerToken_id
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Polygon Blockchain Queries'
    parameters:
      -
        in: path
        name: contract_address
        description: 'The contract address'
        example: '0x5e032243d507c743b061ef021e2ec7fcc6d3ab89'
        required: true
        schema:
          type: string
      -
        in: path
        name: token_id
        description: 'The token id'
        example: '1234'
        required: true
        schema:
          type: string
  '/api/v2/polygon/nfts/{contract_address}/uri/{token_id}':
    get:
      summary: ''
      operationId: getApiV2PolygonNftsContract_addressUriToken_id
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Polygon Blockchain Queries'
    parameters:
      -
        in: path
        name: contract_address
        description: 'The contract address'
        example: '0x5e032243d507c743b061ef021e2ec7fcc6d3ab89'
        required: true
        schema:
          type: string
      -
        in: path
        name: token_id
        description: 'The token id'
        example: '1234'
        required: true
        schema:
          type: string
  /api/v2/polygon/webhooks:
    get:
      summary: 'Get all webhooks'
      operationId: getAllWebhooks
      description: 'Lists all webhooks created by the user.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Polygon Webhooks'
    post:
      summary: 'Create webhook'
      operationId: createWebhook
      description: 'Creates a new webhook for real-time communication and event notification.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Webhook created'
                  data:
                    webhook: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook created'
                  data:
                    type: object
                    properties:
                      webhook:
                        type: string
                        example: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    status: 422
                    ok: false
                    message: 'Data validation failed'
                    errors:
                      from:
                        - 'The from field format is invalid.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      status:
                        type: integer
                        example: 422
                      ok:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: 'Data validation failed'
                      errors:
                        type: object
                        properties:
                          from:
                            type: array
                            example:
                              - 'The from field format is invalid.'
                            items:
                              type: string
      tags:
        - 'Polygon Webhooks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'Sender address (required if not "to"). This field is required when <code>to</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                to:
                  type: string
                  description: 'Receiver address (required if not providing "from"). This field is required when <code>from</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                url:
                  type: string
                  description: 'URL for webhook notifications (required). Must be a valid URL.'
                  example: 'http://vonrueden.com/'
                contractaddress:
                  type: string
                  description: 'The Address of an Contract you want to track (Not allowwed on Bitcoin). This field is required when none of <code>from</code> and <code>to</code> are present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                token_id:
                  type: string
                  description: 'This field is required when none of <code>from</code> and <code>to</code> are present.'
                  example: null
                type:
                  type: string
                  description: ''
                  example: ERC20
                  enum:
                    - MATIC
                    - ERC20
                    - ERC721
              required:
                - url
  '/api/v2/polygon/webhooks/{id}':
    get:
      summary: 'Get webhook'
      operationId: getWebhook
      description: 'Show the details of a Webhook'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Polygon Webhooks'
    put:
      summary: 'Update webhook'
      operationId: updateWebhook
      description: 'Updates an existing webhook with the provided data.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Webhook updated'
                  data:
                    id: 9b73d6ee-8a8b-44c3-b2c6-0bd1e1d8cd9a
                    from: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    to: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    contractaddress: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    type: BEP20
                    token_id: null
                    url: 'http://blanda.com/debitis-et-id-nisi-qui-id.html'
                    is_active: true
                    is_invalid: false
                    old_id: null
                    created_at: '2024-02-29T14:51:35.000000Z'
                    updated_at: '2024-02-29T14:52:33.000000Z'
                    deleted_at: null
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook updated'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9b73d6ee-8a8b-44c3-b2c6-0bd1e1d8cd9a
                      from:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      to:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      contractaddress:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      type:
                        type: string
                        example: BEP20
                      token_id:
                        type: string
                        example: null
                      url:
                        type: string
                        example: 'http://blanda.com/debitis-et-id-nisi-qui-id.html'
                      is_active:
                        type: boolean
                        example: true
                      is_invalid:
                        type: boolean
                        example: false
                      old_id:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2024-02-29T14:51:35.000000Z'
                      updated_at:
                        type: string
                        example: '2024-02-29T14:52:33.000000Z'
                      deleted_at:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 404
                  ok: false
                  message: 'Webhook not found'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 404
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Webhook not found'
                  data:
                    type: array
                    example: []
      tags:
        - 'Polygon Webhooks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'Sender address (required if not "to"). This field is required when <code>to</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                to:
                  type: string
                  description: 'Receiver address (required if not providing "from"). This field is required when <code>from</code> is not present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                url:
                  type: string
                  description: 'URL for webhook notifications (required). Must be a valid URL.'
                  example: 'http://vonrueden.com/'
                contractaddress:
                  type: string
                  description: 'The Address of an Contract you want to track (Not allowwed on Bitcoin). This field is required when none of <code>from</code> and <code>to</code> are present.  Must match the regex /^0x[a-fA-F0-9]{40}$/.'
                  example: '0x922815dFbEa128eAeaAAa185508fe078bECeFBBE'
                token_id:
                  type: string
                  description: 'This field is required when none of <code>from</code> and <code>to</code> are present.'
                  example: null
                type:
                  type: string
                  description: ''
                  example: ERC20
                  enum:
                    - MATIC
                    - ERC20
                    - ERC721
              required:
                - url
    delete:
      summary: 'Delete webhook'
      operationId: deleteWebhook
      description: 'This method will delete the specified webhook.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Webhook deleted'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook deleted'
                  data:
                    type: array
                    example: []
      tags:
        - 'Polygon Webhooks'
    parameters:
      -
        in: path
        name: id
        description: 'The UUID of the webhook you want to show.'
        example: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
        required: true
        schema:
          type: string
  /api/v2/polygon/webhooks/notifications:
    get:
      summary: 'Display all Webhook Notifications'
      operationId: displayAllWebhookNotifications
      description: 'Lists all webhook notifications created by the user for the specific  Blockchain and Network'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Successfully fetched notifications'
                  current_page: 1
                  data:
                    -
                      id: 9ba28088-81d8-4aab-b711-650525081fe1
                      webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                      txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                      type: TRC20
                      contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                      from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                      to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                      tokenid: null
                      amount: null
                      blocknumber: '19499380'
                      status: failed
                      url: 'https://example.com'
                      success: false
                      attempts: 0
                      created_at: '2024-05-05T19:33:52.000000Z'
                      updated_at: '2024-05-05T19:33:54.000000Z'
                      network: testnet
                      blockchain: tron
                      response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully fetched notifications'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type: TRC20
                        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid: null
                        amount: null
                        blocknumber: '19499380'
                        status: failed
                        url: 'https://example.com'
                        success: false
                        attempts: 0
                        created_at: '2024-05-05T19:33:52.000000Z'
                        updated_at: '2024-05-05T19:33:54.000000Z'
                        network: testnet
                        blockchain: tron
                        response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id:
                          type: string
                          example: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid:
                          type: string
                          example: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type:
                          type: string
                          example: TRC20
                        contractaddress:
                          type: string
                          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from:
                          type: string
                          example: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to:
                          type: string
                          example: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: null
                        blocknumber:
                          type: string
                          example: '19499380'
                        status:
                          type: string
                          example: failed
                        url:
                          type: string
                          example: 'https://example.com'
                        success:
                          type: boolean
                          example: false
                        attempts:
                          type: integer
                          example: 0
                        created_at:
                          type: string
                          example: '2024-05-05T19:33:52.000000Z'
                        updated_at:
                          type: string
                          example: '2024-05-05T19:33:54.000000Z'
                        network:
                          type: string
                          example: testnet
                        blockchain:
                          type: string
                          example: tron
                        response:
                          type: string
                          example: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Polygon Webhooks'
  /api/v2/polygon/webhooks/notifications/failed:
    get:
      summary: 'Display all failed Webhook Notification'
      operationId: displayAllFailedWebhookNotification
      description: "Lists all failed webhook notifications created by the user for the specific  Blockchain and Network\nBased on the response you can use our /webhooks/notifications/{id}/retry to retry every failed webhook.\n\nAfter you started the retry process, the webhook will be removed from this list. should the retry process fail, the webhook will be added back to this list."
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Successfully fetched failed notifications'
                  current_page: 1
                  data:
                    -
                      id: 9ba28088-81d8-4aab-b711-650525081fe1
                      webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                      txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                      type: TRC20
                      contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                      from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                      to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                      tokenid: null
                      amount: null
                      blocknumber: '19499380'
                      status: failed
                      url: 'https://example.com'
                      success: false
                      attempts: 0
                      created_at: '2024-05-05T19:33:52.000000Z'
                      updated_at: '2024-05-05T19:33:54.000000Z'
                      network: testnet
                      blockchain: tron
                      response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully fetched failed notifications'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type: TRC20
                        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid: null
                        amount: null
                        blocknumber: '19499380'
                        status: failed
                        url: 'https://example.com'
                        success: false
                        attempts: 0
                        created_at: '2024-05-05T19:33:52.000000Z'
                        updated_at: '2024-05-05T19:33:54.000000Z'
                        network: testnet
                        blockchain: tron
                        response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id:
                          type: string
                          example: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid:
                          type: string
                          example: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type:
                          type: string
                          example: TRC20
                        contractaddress:
                          type: string
                          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from:
                          type: string
                          example: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to:
                          type: string
                          example: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: null
                        blocknumber:
                          type: string
                          example: '19499380'
                        status:
                          type: string
                          example: failed
                        url:
                          type: string
                          example: 'https://example.com'
                        success:
                          type: boolean
                          example: false
                        attempts:
                          type: integer
                          example: 0
                        created_at:
                          type: string
                          example: '2024-05-05T19:33:52.000000Z'
                        updated_at:
                          type: string
                          example: '2024-05-05T19:33:54.000000Z'
                        network:
                          type: string
                          example: testnet
                        blockchain:
                          type: string
                          example: tron
                        response:
                          type: string
                          example: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Polygon Webhooks'
  '/api/v2/polygon/webhooks/notifications/{id}/retry':
    post:
      summary: 'Retry a failed Webhook Notification'
      operationId: retryAFailedWebhookNotification
      description: 'Retries a failed webhook notification'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses: {  }
      tags:
        - 'Polygon Webhooks'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: architecto
        required: true
        schema:
          type: string
  /api/v2/bitcoin/blocks/number:
    get:
      summary: ''
      operationId: getApiV2BitcoinBlocksNumber
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Bitcoin Blockchain Queries'
  '/api/v2/bitcoin/blocks/{block_number}':
    get:
      summary: 'get block by number or hash'
      operationId: getBlockByNumberOrHash
      description: 'This Method returns the block by its number'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Bitcoin Blockchain Queries'
    parameters:
      -
        in: path
        name: block_number
        description: 'The block number'
        example: '0xbEA640f2BB84082Df3bFA459774c4A5b496CA054'
        required: true
        schema:
          type: string
  /api/v2/bitcoin/transactions:
    get:
      summary: 'List all transaction created by Chaingateway'
      operationId: listAllTransactionCreatedByChaingateway
      description: 'Lists all transactions created by our api. Please note that this will only list transactions created by our api as wo currently do not offer an transaction index.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transactions'
                  current_page: 1
                  data:
                    -
                      id: 25
                      user_id: 1
                      blockchain: bitcoin
                      network: testnet
                      type: default
                      txid: 90b769cc7671f12849d61a5406aef65f0f10f289a27765f46f9d451c9a96a760
                      from: 7b75AzvQirurCilyLxGpE0IHf9LVEk
                      to: tb1qzrmcwlnjclrwr6m3g8863n4zl8hkm0cjfnhzmj
                      contractaddress: null
                      amount: '0.000010000000'
                      tokenid: null
                      responseJson: '{"result":"90b769cc7671f12849d61a5406aef65f0f10f289a27765f46f9d451c9a96a760","error":null,"id":1}'
                      httpStatus: '201'
                      created_at: '2024-02-29T11:30:19.000000Z'
                      updated_at: '2024-02-29T11:30:19.000000Z'
                  first_page_url: 'http://testnet.chaingateway.test:81/api/v2/bitcoin/transactions?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://testnet.chaingateway.test:81/api/v2/bitcoin/transactions?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://testnet.chaingateway.test:81/api/v2/bitcoin/transactions?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://testnet.chaingateway.test:81/api/v2/bitcoin/transactions'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transactions'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 25
                        user_id: 1
                        blockchain: bitcoin
                        network: testnet
                        type: default
                        txid: 90b769cc7671f12849d61a5406aef65f0f10f289a27765f46f9d451c9a96a760
                        from: 7b75AzvQirurCilyLxGpE0IHf9LVEk
                        to: tb1qzrmcwlnjclrwr6m3g8863n4zl8hkm0cjfnhzmj
                        contractaddress: null
                        amount: '0.000010000000'
                        tokenid: null
                        responseJson: '{"result":"90b769cc7671f12849d61a5406aef65f0f10f289a27765f46f9d451c9a96a760","error":null,"id":1}'
                        httpStatus: '201'
                        created_at: '2024-02-29T11:30:19.000000Z'
                        updated_at: '2024-02-29T11:30:19.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 25
                        user_id:
                          type: integer
                          example: 1
                        blockchain:
                          type: string
                          example: bitcoin
                        network:
                          type: string
                          example: testnet
                        type:
                          type: string
                          example: default
                        txid:
                          type: string
                          example: 90b769cc7671f12849d61a5406aef65f0f10f289a27765f46f9d451c9a96a760
                        from:
                          type: string
                          example: 7b75AzvQirurCilyLxGpE0IHf9LVEk
                        to:
                          type: string
                          example: tb1qzrmcwlnjclrwr6m3g8863n4zl8hkm0cjfnhzmj
                        contractaddress:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: '0.000010000000'
                        tokenid:
                          type: string
                          example: null
                        responseJson:
                          type: string
                          example: '{"result":"90b769cc7671f12849d61a5406aef65f0f10f289a27765f46f9d451c9a96a760","error":null,"id":1}'
                        httpStatus:
                          type: string
                          example: '201'
                        created_at:
                          type: string
                          example: '2024-02-29T11:30:19.000000Z'
                        updated_at:
                          type: string
                          example: '2024-02-29T11:30:19.000000Z'
                  first_page_url:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bitcoin/transactions?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bitcoin/transactions?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://testnet.chaingateway.test:81/api/v2/bitcoin/transactions?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://testnet.chaingateway.test:81/api/v2/bitcoin/transactions'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Bitcoin Transactions'
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Transaction created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Succesfully created transaction'
                  data:
                    txid: 9aede7eee01b79aab1cd5a8990f31069756bdf9c969c67b1fd90428ece11919f
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully created transaction'
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                        example: 9aede7eee01b79aab1cd5a8990f31069756bdf9c969c67b1fd90428ece11919f
        422:
          description: 'Wrong password'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Error: The wallet passphrase entered was incorrect.'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Error: The wallet passphrase entered was incorrect.'
                  data:
                    type: array
                    example: []
      tags:
        - 'Bitcoin Transactions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                to:
                  type: string
                  description: 'The address to send the transaction to. Must match the regex /^(bc1|tb1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$/.'
                  example: bc1qar0srrr7xfkvy5l643lydnw9re59gtzzwf5mdq
                amount:
                  type: number
                  description: 'The amount to send.'
                  example: 0.0001
                walletname:
                  type: string
                  description: 'The name of the wallet to send the transaction from.'
                  example: mywallet
                password:
                  type: string
                  description: 'The password to unlock the wallet.'
                  example: mypassword
                subtractfee:
                  type: boolean
                  description: 'Whether to subtract the fee from the amount being sent.'
                  example: true
                speed:
                  type: string
                  description: 'The speed of the transaction.'
                  example: high
                  enum:
                    - fast
                    - medium
                    - slow
              required:
                - to
                - amount
                - walletname
                - password
                - speed
  '/api/v2/bitcoin/transactions/{txid}':
    get:
      summary: 'Show a transaction'
      operationId: showATransaction
      description: 'Show the details of a transaction'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Encoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction'
                  data:
                    txid: 020000000001019f9111ce8e4290fdb1679c969cdf6b756910f390895acdb1aa791be0eee7ed9a0100000000feffffff02e80300000000000016001410f7877e72c7c6e1eb7141cfa8cea2f9ef6dbf1245e5000000000000160014846e43c02307cc2dc380029de9383db83117ab020247304402200a1931a70bbd9b5490d667858389f9be81528c2fba379b2e44e599b18fce98810220147eb331d461386b1cb5155b398b2b8a3da86fcb1db933871c48b41bdd12815d012103fc7450a4f530a3e14d0511064dd3f975737ec510c60e456f85796863de997015de5d2700
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction'
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                        example: 020000000001019f9111ce8e4290fdb1679c969cdf6b756910f390895acdb1aa791be0eee7ed9a0100000000feffffff02e80300000000000016001410f7877e72c7c6e1eb7141cfa8cea2f9ef6dbf1245e5000000000000160014846e43c02307cc2dc380029de9383db83117ab020247304402200a1931a70bbd9b5490d667858389f9be81528c2fba379b2e44e599b18fce98810220147eb331d461386b1cb5155b398b2b8a3da86fcb1db933871c48b41bdd12815d012103fc7450a4f530a3e14d0511064dd3f975737ec510c60e456f85796863de997015de5d2700
        422:
          description: 'Transaction not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'No such mempool or blockchain transaction. Use gettransaction for wallet transactions.'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No such mempool or blockchain transaction. Use gettransaction for wallet transactions.'
                  data:
                    type: array
                    example: []
      tags:
        - 'Bitcoin Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction id of the transaction'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: 'If the transaction should be decoded'
        example: decoded
        required: true
        schema:
          type: string
  '/api/v2/bitcoin/transactions/{txid}/decoded':
    get:
      summary: 'Show a transaction'
      operationId: showATransaction
      description: 'Show the details of a transaction'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: Encoded
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed transaction'
                  data:
                    txid: 020000000001019f9111ce8e4290fdb1679c969cdf6b756910f390895acdb1aa791be0eee7ed9a0100000000feffffff02e80300000000000016001410f7877e72c7c6e1eb7141cfa8cea2f9ef6dbf1245e5000000000000160014846e43c02307cc2dc380029de9383db83117ab020247304402200a1931a70bbd9b5490d667858389f9be81528c2fba379b2e44e599b18fce98810220147eb331d461386b1cb5155b398b2b8a3da86fcb1db933871c48b41bdd12815d012103fc7450a4f530a3e14d0511064dd3f975737ec510c60e456f85796863de997015de5d2700
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed transaction'
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                        example: 020000000001019f9111ce8e4290fdb1679c969cdf6b756910f390895acdb1aa791be0eee7ed9a0100000000feffffff02e80300000000000016001410f7877e72c7c6e1eb7141cfa8cea2f9ef6dbf1245e5000000000000160014846e43c02307cc2dc380029de9383db83117ab020247304402200a1931a70bbd9b5490d667858389f9be81528c2fba379b2e44e599b18fce98810220147eb331d461386b1cb5155b398b2b8a3da86fcb1db933871c48b41bdd12815d012103fc7450a4f530a3e14d0511064dd3f975737ec510c60e456f85796863de997015de5d2700
        422:
          description: 'Transaction not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'No such mempool or blockchain transaction. Use gettransaction for wallet transactions.'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No such mempool or blockchain transaction. Use gettransaction for wallet transactions.'
                  data:
                    type: array
                    example: []
      tags:
        - 'Bitcoin Transactions'
    parameters:
      -
        in: path
        name: txid
        description: 'The transaction id of the transaction'
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: decoded
        description: 'If the transaction should be decoded'
        example: decoded
        required: true
        schema:
          type: string
  /api/v2/bitcoin/wallets:
    get:
      summary: 'Display all addresses'
      operationId: displayAllAddresses
      description: 'Lists all addresses you have created but not yet deleted'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Succesfully parsed wallets'
                  data:
                    wallets:
                      - 01HP6FVARVTQES6WW8QHC5WHPT
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Succesfully parsed wallets'
                  data:
                    type: object
                    properties:
                      wallets:
                        type: array
                        example:
                          - 01HP6FVARVTQES6WW8QHC5WHPT
                        items:
                          type: string
      tags:
        - 'Bitcoin Wallets'
    post:
      summary: 'Create a new Wallet'
      operationId: createANewWallet
      description: "This method will create a new wallet for you.\nThe wallet will be stored in our database and you can access it with the wallet name.\nThe wallet will be encrypted with the password you provide.\n\nafter creating the wallet, you can create several addresses for the wallet. There is no need to create a new wallet for each address.\n\n<aside class=\"notice\">We do not store Passowrds! If you lose it, we cannot restore your wallet! </aside>"
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Address created'
                  data:
                    bitcoinwallet: 01HP6FVARVTQES6WW8QHC5WHPT
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address created'
                  data:
                    type: object
                    properties:
                      bitcoinwallet:
                        type: string
                        example: 01HP6FVARVTQES6WW8QHC5WHPT
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Your address limit exceeded. Please upgrade your plan'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Your address limit exceeded. Please upgrade your plan'
                  data:
                    type: array
                    example: []
      tags:
        - 'Bitcoin Wallets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: ''
                  example: architecto
              required:
                - password
  '/api/v2/bitcoin/wallets/{wallet}':
    get:
      summary: 'Show Wallet details'
      operationId: showWalletDetails
      description: 'This method will return the wallet details.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Wallet fetched successfully'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Wallet fetched successfully'
                  data:
                    address: bc1qzq8m9ukvvgvj7kmlejnfr2q4ndmk2e4ndtr9rn
                    balance: 0
                    transactions: 0
                    unconfirmed: 0
                    label: 'My Wallet'
                    created_at: '2022-12-26T12:55:48.128000860Z'
                    updated_at: '2022-12-26T12:55:48.128000860Z'
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Wallet fetched successfully'
                  data:
                    type: object
                    properties:
                      address:
                        type: string
                        example: bc1qzq8m9ukvvgvj7kmlejnfr2q4ndmk2e4ndtr9rn
                      balance:
                        type: integer
                        example: 0
                      transactions:
                        type: integer
                        example: 0
                      unconfirmed:
                        type: integer
                        example: 0
                      label:
                        type: string
                        example: 'My Wallet'
                      created_at:
                        type: string
                        example: '2022-12-26T12:55:48.128000860Z'
                      updated_at:
                        type: string
                        example: '2022-12-26T12:55:48.128000860Z'
      tags:
        - 'Bitcoin Wallets'
    delete:
      summary: 'Delete an address'
      operationId: deleteAnAddress
      description: 'This method will delete your address. This decreases your used address metrics'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Address deleted'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address deleted'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address deleted'
                  data:
                    type: array
                    example: []
      tags:
        - 'Bitcoin Wallets'
    parameters:
      -
        in: path
        name: wallet
        description: 'The address you want to fetch.'
        example: bc1qzq8m9ukvvgvj7kmlejnfr2q4ndmk2e4ndtr9rn
        required: true
        schema:
          type: string
  '/api/v2/bitcoin/wallets/{wallet}/addresses':
    get:
      summary: 'Get wallet addresses'
      operationId: getWalletAddresses
      description: 'This method will return all addresses of a wallet'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: 'Address created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Address created'
                  data:
                    address: bc1qzq8m9ukvvgvj7kmlejnfr2q4ndmk2e4ndtr9rn
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address created'
                  data:
                    type: object
                    properties:
                      address:
                        type: string
                        example: bc1qzq8m9ukvvgvj7kmlejnfr2q4ndmk2e4ndtr9rn
      tags:
        - 'Bitcoin Wallets'
    post:
      summary: 'Create a new wallet address'
      operationId: createANewWalletAddress
      description: 'This method will create a new address. This decreases your used address metrics'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: 'Address created'
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Address created'
                  data:
                    address: bc1qzq8m9ukvvgvj7kmlejnfr2q4ndmk2e4ndtr9rn
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Address created'
                  data:
                    type: object
                    properties:
                      address:
                        type: string
                        example: bc1qzq8m9ukvvgvj7kmlejnfr2q4ndmk2e4ndtr9rn
      tags:
        - 'Bitcoin Wallets'
    parameters:
      -
        in: path
        name: wallet
        description: 'The wallet you want to get the addresses from.'
        example: 7b75AzvQirurCilyLxGpE0IHf9LVEk
        required: true
        schema:
          type: string
  /api/v2/bitcoin/webhooks:
    get:
      summary: 'Display all webhooks'
      operationId: displayAllWebhooks
      description: 'Lists all webhooks created by the user.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"status\": 200,\n    \"ok\": true,\n    \"message\": \"Successfully parsed webhooks\",\n    \"data\": {\n        \"ipns\": [\n            {\n                \"id\": \"9b2b4dcc-1479-4bcd-9b8a-015673e80f46\",\n                \"from\": \"bc1qmexahpjpyrzjahy6j4gpqhwnglkff5urmzus6wv6pvd2lsn7jlwqka7r9d\",\n                \"to\": null,\n                \"url\": \"https://example.com/webhook\",\n                \"is_active\": true,\n                \"created_at\": \"2024-01-25T12:00:00.000000Z\",\n                \"updated_at\": \"2024-01-25T12:00:00.000000Z\"\n            },\n            ...\n        ]\n    }\n}"
      tags:
        - 'Bitcoin Webhooks'
    post:
      summary: 'Create a new Webhook'
      operationId: createANewWebhook
      description: 'Creates a new webhook for real-time communication and event notification.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 201
                  ok: true
                  message: 'Webhook created'
                  data:
                    webhook: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
                properties:
                  status:
                    type: integer
                    example: 201
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook created'
                  data:
                    type: object
                    properties:
                      webhook:
                        type: string
                        example: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 422
                  ok: false
                  message: 'Data validation failed'
                  errors:
                    status: 422
                    ok: false
                    message: 'Data validation failed'
                    errors:
                      from:
                        - 'The from field format is invalid.'
                properties:
                  status:
                    type: integer
                    example: 422
                  ok:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Data validation failed'
                  errors:
                    type: object
                    properties:
                      status:
                        type: integer
                        example: 422
                      ok:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: 'Data validation failed'
                      errors:
                        type: object
                        properties:
                          from:
                            type: array
                            example:
                              - 'The from field format is invalid.'
                            items:
                              type: string
      tags:
        - 'Bitcoin Webhooks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'Sender address (required if not providing type, to, contractaddress, and tokenid). This field is required when none of <code>type</code>, <code>to</code>, <code>contractaddress</code>, and <code>tokenid</code> are present.'
                  example: null
                to:
                  type: string
                  description: 'Receiver address (required if not providing type, from, contractaddress, and tokenid). This field is required when none of <code>from</code>, <code>type</code>, <code>contractaddress</code>, and <code>tokenid</code> are present.'
                  example: null
                url:
                  type: string
                  description: 'URL for webhook notifications (required).'
                  example: 'http://www.bailey.biz/quos-velit-et-fugiat-sunt-nihil-accusantium-harum.html'
              required:
                - url
  '/api/v2/bitcoin/webhooks/{id}':
    get:
      summary: 'Display a webhook'
      operationId: displayAWebhook
      description: 'Show the details of a Webhook'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Bitcoin Webhooks'
    put:
      summary: 'Update a Webhook'
      operationId: updateAWebhook
      description: 'Updates an existing webhook with the provided data.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: true
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Webhook updated'
                  data:
                    id: 9b73d6ee-8a8b-44c3-b2c6-0bd1e1d8cd9a
                    from: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    to: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    contractaddress: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                    type: BEP20
                    token_id: null
                    url: 'http://blanda.com/debitis-et-id-nisi-qui-id.html'
                    is_active: true
                    is_invalid: false
                    old_id: null
                    created_at: '2024-02-29T14:51:35.000000Z'
                    updated_at: '2024-02-29T14:52:33.000000Z'
                    deleted_at: null
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook updated'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9b73d6ee-8a8b-44c3-b2c6-0bd1e1d8cd9a
                      from:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      to:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      contractaddress:
                        type: string
                        example: '0xe01e45c4d35e596cc2aEFABAe1c08FDa9fAc4241'
                      type:
                        type: string
                        example: BEP20
                      token_id:
                        type: string
                        example: null
                      url:
                        type: string
                        example: 'http://blanda.com/debitis-et-id-nisi-qui-id.html'
                      is_active:
                        type: boolean
                        example: true
                      is_invalid:
                        type: boolean
                        example: false
                      old_id:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2024-02-29T14:51:35.000000Z'
                      updated_at:
                        type: string
                        example: '2024-02-29T14:52:33.000000Z'
                      deleted_at:
                        type: string
                        example: null
      tags:
        - 'Bitcoin Webhooks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: 'Sender address (required if not providing type, to, contractaddress, and tokenid). This field is required when none of <code>type</code>, <code>to</code>, <code>contractaddress</code>, and <code>tokenid</code> are present.'
                  example: null
                to:
                  type: string
                  description: 'Receiver address (required if not providing type, from, contractaddress, and tokenid). This field is required when none of <code>from</code>, <code>type</code>, <code>contractaddress</code>, and <code>tokenid</code> are present.'
                  example: null
                url:
                  type: string
                  description: 'URL for webhook notifications (required).'
                  example: 'http://www.bailey.biz/quos-velit-et-fugiat-sunt-nihil-accusantium-harum.html'
              required:
                - url
    delete:
      summary: 'Delete a Webhook'
      operationId: deleteAWebhook
      description: 'This method will delete the specified webhook.'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Webhook deleted'
                  data: []
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Webhook deleted'
                  data:
                    type: array
                    example: []
      tags:
        - 'Bitcoin Webhooks'
    parameters:
      -
        in: path
        name: id
        description: 'The UUID of the webhook you want to show.'
        example: 9b2b4dcc-1479-4bcd-9b8a-015673e80f46
        required: true
        schema:
          type: string
  /api/v2/bitcoin/webhooks/notifications:
    get:
      summary: 'Display all Webhook Notifications'
      operationId: displayAllWebhookNotifications
      description: 'Lists all webhook notifications created by the user for the specific  Blockchain and Network'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Successfully fetched notifications'
                  current_page: 1
                  data:
                    -
                      id: 9ba28088-81d8-4aab-b711-650525081fe1
                      webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                      txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                      type: TRC20
                      contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                      from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                      to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                      tokenid: null
                      amount: null
                      blocknumber: '19499380'
                      status: failed
                      url: 'https://example.com'
                      success: false
                      attempts: 0
                      created_at: '2024-05-05T19:33:52.000000Z'
                      updated_at: '2024-05-05T19:33:54.000000Z'
                      network: testnet
                      blockchain: tron
                      response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully fetched notifications'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type: TRC20
                        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid: null
                        amount: null
                        blocknumber: '19499380'
                        status: failed
                        url: 'https://example.com'
                        success: false
                        attempts: 0
                        created_at: '2024-05-05T19:33:52.000000Z'
                        updated_at: '2024-05-05T19:33:54.000000Z'
                        network: testnet
                        blockchain: tron
                        response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id:
                          type: string
                          example: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid:
                          type: string
                          example: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type:
                          type: string
                          example: TRC20
                        contractaddress:
                          type: string
                          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from:
                          type: string
                          example: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to:
                          type: string
                          example: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: null
                        blocknumber:
                          type: string
                          example: '19499380'
                        status:
                          type: string
                          example: failed
                        url:
                          type: string
                          example: 'https://example.com'
                        success:
                          type: boolean
                          example: false
                        attempts:
                          type: integer
                          example: 0
                        created_at:
                          type: string
                          example: '2024-05-05T19:33:52.000000Z'
                        updated_at:
                          type: string
                          example: '2024-05-05T19:33:54.000000Z'
                        network:
                          type: string
                          example: testnet
                        blockchain:
                          type: string
                          example: tron
                        response:
                          type: string
                          example: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Bitcoin Webhooks'
  /api/v2/bitcoin/webhooks/notifications/failed:
    get:
      summary: 'Display all failed Webhook Notification'
      operationId: displayAllFailedWebhookNotification
      description: "Lists all failed webhook notifications created by the user for the specific  Blockchain and Network\nBased on the response you can use our /webhooks/notifications/{id}/retry to retry every failed webhook.\n\nAfter you started the retry process, the webhook will be removed from this list. should the retry process fail, the webhook will be added back to this list."
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  ok: true
                  message: 'Successfully fetched failed notifications'
                  current_page: 1
                  data:
                    -
                      id: 9ba28088-81d8-4aab-b711-650525081fe1
                      webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                      txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                      type: TRC20
                      contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                      from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                      to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                      tokenid: null
                      amount: null
                      blocknumber: '19499380'
                      status: failed
                      url: 'https://example.com'
                      success: false
                      attempts: 0
                      created_at: '2024-05-05T19:33:52.000000Z'
                      updated_at: '2024-05-05T19:33:54.000000Z'
                      network: testnet
                      blockchain: tron
                      response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  links:
                    -
                      url: null
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                      label: '1'
                      active: true
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  status:
                    type: integer
                    example: 200
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Successfully fetched failed notifications'
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type: TRC20
                        contractaddress: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid: null
                        amount: null
                        blocknumber: '19499380'
                        status: failed
                        url: 'https://example.com'
                        success: false
                        attempts: 0
                        created_at: '2024-05-05T19:33:52.000000Z'
                        updated_at: '2024-05-05T19:33:54.000000Z'
                        network: testnet
                        blockchain: tron
                        response: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9ba28088-81d8-4aab-b711-650525081fe1
                        webhook_id:
                          type: string
                          example: 9ba897da-7651-4df6-80ef-11c898b195e5
                        txid:
                          type: string
                          example: '0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15'
                        type:
                          type: string
                          example: TRC20
                        contractaddress:
                          type: string
                          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
                        from:
                          type: string
                          example: '0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460'
                        to:
                          type: string
                          example: '0x238a879d973e127193b1a2fdc4f6410cd5289da5'
                        tokenid:
                          type: string
                          example: null
                        amount:
                          type: string
                          example: null
                        blocknumber:
                          type: string
                          example: '19499380'
                        status:
                          type: string
                          example: failed
                        url:
                          type: string
                          example: 'https://example.com'
                        success:
                          type: boolean
                          example: false
                        attempts:
                          type: integer
                          example: 0
                        created_at:
                          type: string
                          example: '2024-05-05T19:33:52.000000Z'
                        updated_at:
                          type: string
                          example: '2024-05-05T19:33:54.000000Z'
                        network:
                          type: string
                          example: testnet
                        blockchain:
                          type: string
                          example: tron
                        response:
                          type: string
                          example: '{"status":"success","message":"Hooraa! Successfully received by demo receiver.","data":{"id":"9ba28088-81d8-4aab-b711-650525081fee","webhook_id":"9ba27cd9-abdb-4c71-994f-e9e2de73af88","from":"0xb23360ccdd9ed1b15d45e5d3824bb409c8d7c460","to":"0x238a879d973e127193b1a2fdc4f6410cd5289da5","blocknumber":"19499380","datetime":"2024-03-23 19:33:54","tokenid":null,"type":"ERC20","contractaddress":"0xdac17f958d2ee523a2206206994597c13d831ec7","txid":"0x8bb1ff22f084fe5098288a17dd6641f02cfcd9a4e923a342aa45dc78e178fc15","amount":null}}'
                  first_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: null
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://192.168.178.100:81/api/v2/tron/webhooks/notifications/failed'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - 'Bitcoin Webhooks'
  '/api/v2/bitcoin/webhooks/notifications/{id}/retry':
    post:
      summary: 'Retry a failed Webhook Notification'
      operationId: retryAFailedWebhookNotification
      description: 'Retries a failed webhook notification'
      parameters:
        -
          in: header
          name: X-Network
          description: 'Specify "testnet" for test network or leave empty for main network. Defaults to "mainnet" if not provided.'
          required: false
          schema:
            type: string
            enum:
              - testnet
              - mainnet
            default: mainnet
          0:
            in: header
            name: Authorization
            description: 'Bearer token for authorization. Required for authenticated endpoints.'
            required: true
            schema:
              type: string
          1:
            in: header
            name: Content-Type
            description: 'The MIME type of the body of the request (used with POST and PUT requests).'
            required: false
            schema:
              type: string
              enum:
                - application/json
                - application/x-www-form-urlencoded
                - multipart/form-data
              default: application/json
      responses: {  }
      tags:
        - 'Bitcoin Webhooks'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: architecto
        required: true
        schema:
          type: string
tags:
  -
    name: 'Tron Blockchain Queries'
    description: 'Description for Tron Blockchain Queries'
  -
    name: 'Tron Transactions'
    description: 'Description for Tron Transactions'
  -
    name: 'Tron Addresses'
    description: 'Description for Tron Addresses'
  -
    name: 'Tron Staking'
    description: 'Description for Tron Staking'
  -
    name: Paymaster
    description: 'Description for Paymaster'
  -
    name: 'Tron Webhooks'
    description: 'Description for Tron Webhooks'
  -
    name: 'Ethereum Blockchain Queries'
    description: 'Description for Ethereum Blockchain Queries'
  -
    name: 'Ethereum Transactions'
    description: 'Description for Ethereum Transactions'
  -
    name: 'Ethereum Addresses'
    description: 'Description for Ethereum Addresses'
  -
    name: 'Ethereum Webhooks'
    description: 'Description for Ethereum Webhooks'
  -
    name: 'BSC Blockchain Queries'
    description: 'Description for BSC Blockchain Queries'
  -
    name: 'BSC Transactions'
    description: 'Description for BSC Transactions'
  -
    name: 'BSC Addresses'
    description: 'Description for BSC Addresses'
  -
    name: 'BSC Webhooks'
    description: 'Description for BSC Webhooks'
  -
    name: 'Polygon Blockchain Queries'
    description: 'Description for Polygon Blockchain Queries'
  -
    name: 'Polygon Transactions'
    description: 'Description for Polygon Transactions'
  -
    name: 'Polygon Addresses'
    description: 'Description for Polygon Addresses'
  -
    name: 'Polygon Webhooks'
    description: 'Description for Polygon Webhooks'
  -
    name: 'Bitcoin Blockchain Queries'
    description: 'Description for Bitcoin Blockchain Queries'
  -
    name: 'Bitcoin Transactions'
    description: 'Description for Bitcoin Transactions'
  -
    name: 'Bitcoin Wallets'
    description: 'Description for Bitcoin Wallets'
  -
    name: 'Bitcoin Webhooks'
    description: 'Description for Bitcoin Webhooks'
x-tagGroups:
  -
    name: 'Tron API'
    tags:
      - 'Tron Blockchain Queries'
      - 'Tron Transactions'
      - 'Tron Addresses'
      - 'Tron Staking'
      - Paymaster
      - 'Tron Webhooks'
  -
    name: 'Ethereum API'
    tags:
      - 'Ethereum Blockchain Queries'
      - 'Ethereum Transactions'
      - 'Ethereum Addresses'
      - 'Ethereum Webhooks'
  -
    name: 'Binance Smart Chain API'
    tags:
      - 'BSC Blockchain Queries'
      - 'BSC Transactions'
      - 'BSC Addresses'
      - 'BSC Webhooks'
  -
    name: 'Polygon API'
    tags:
      - 'Polygon Blockchain Queries'
      - 'Polygon Transactions'
      - 'Polygon Addresses'
      - 'Polygon Webhooks'
  -
    name: 'Bitcoin API'
    tags:
      - 'Bitcoin Blockchain Queries'
      - 'Bitcoin Transactions'
      - 'Bitcoin Wallets'
      - 'Bitcoin Webhooks'
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>API tokens</b> in your user menu.'
security:
  -
    default: []
